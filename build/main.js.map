{"version":3,"sources":["./src/app/components/categories/new-category/new-category.component.html","./src/app/components/categories/new-category/new-category.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","./src/app/commen/config.ts","./src/app/components/files/upload-file/upload-file.component.ts","./src/app/components/files/upload-file/upload-file.component.html","./src/environments/environment.ts","./src/app/components/auth/sgin-up-manager/sgin-up-manager.component.html","./src/app/components/auth/sgin-up-manager/sgin-up-manager.component.ts","./src/app/components/cards/card-details/card-details.component.html","./src/app/components/cards/card-details/card-details.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/cards/edit-card-img/edit-card-img.component.ts","./src/app/components/cards/edit-card-img/edit-card-img.component.html","./src/app/components/auth/sgin-upbusiness/sgin-upbusiness.component.html","./src/app/components/auth/sgin-upbusiness/sgin-upbusiness.component.ts","./src/app/components/cards/card-id/card-id.component.html","./src/app/components/cards/card-id/card-id.component.ts","./src/app/components/dashboard/dash-connected/dash-Connected.component.html","./src/app/components/dashboard/dash-connected/dash-connected.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/files.service.ts","./src/app/guard/auth.guard.ts","./src/app/components/cards/delete-card/delete-card.component.ts","./src/app/components/dashboard/nav-bar/nav-bar.component.html","./src/app/components/dashboard/nav-bar/nav-bar.component.ts","./src/app/components/categories/edit-category/edit-category.component.html","./src/app/components/categories/edit-category/edit-category.component.ts","./src/app/services/auth.service.ts","./src/app/components/cards/edit-card/edit-card.component.html","./src/app/components/cards/edit-card/edit-card.component.ts","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/components/categories/category-id/category-id.component.html","./src/app/components/categories/category-id/category-id.component.ts","./src/app/components/cards/new-card/new-card.component.html","./src/app/components/cards/new-card/new-card.component.ts","./src/app/services/card.service.ts","./src/app/app-routing.module.ts","./src/app/components/auth/log-out/log-out.component.ts","./src/app/components/auth/log-out/log-out.component.html","./src/app/components/dashboard/footer/footer.component.ts","./src/app/components/dashboard/footer/footer.component.html","./src/app/services/categories.service.ts","./src/main.ts","./src/app/components/categories/delete-category/delete-category.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"row justify-content-center mt-5 p-4\">\n  <form\n    class=\"text-center br-me form-width bg-3 p-4\"\n    #newCategory=\"ngForm\"\n    (ngSubmit)=\"onSubmit(newCategory)\"\n    novalidate=\"novalidate\"\n  >\n    <h1 class=\"h3 mb-3 font-weight-normal\">יצירת קטגוריה חדשה</h1>\n\n    <div>\n      <label for=\"inputcategoryName\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>שם הקטגוריה החדשה</label\n      >\n      <input\n        type=\"text\"\n        #categoryName=\"ngModel\"\n        name=\"categoryName\"\n        [(ngModel)]=\"category.categoryName\"\n        id=\"inputcategoryName\"\n        class=\"form-control\"\n        placeholder=\"שם הקטגוריה החדשה\"\n        required\n        autocomplete=\"categoryName\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': categoryName.touched && categoryName.valid,\n          'is-invalid': categoryName.touched && categoryName.invalid\n        }\"\n      />\n      <div *ngIf=\"categoryName.errors?.required\" class=\"invalid-feedback\">\n        שדה שם הקטגוריה החדשה הינו שדה חובה\n      </div>\n      <div *ngIf=\"categoryName.errors?.minlength\" class=\"invalid-feedback\">\n        שדה שם הקטגוריה החדשה צריך להיות באורך\n        {{ categoryName.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>תמונה קטגוריה\n      </label>\n      <input\n        type=\"text\"\n        #image=\"ngModel\"\n        name=\"image\"\n        [(ngModel)]=\"category.image\"\n        id=\"inputimage\"\n        class=\"form-control\"\n        placeholder=\"תמונה קטגוריה (קישור לאתר חיצוני)\"\n        required\n        autocomplete=\"image\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': image.touched && image.valid,\n          'is-invalid': image.touched && image.invalid\n        }\"\n      />\n      <div *ngIf=\"image.errors?.required\" class=\"invalid-feedback\">\n        שדה תמונה קטגוריה הינו שדה חובה\n      </div>\n      <div *ngIf=\"image.errors?.minlength\" class=\"invalid-feedback\">\n        שדה תמונה קטגוריה צריך להיות באורך\n        {{ image.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <button class=\"btn btn-lg btn-primary btn-block mt-4\" type=\"submit\">\n      יצירת קטגוריה חדשה\n    </button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Category } from 'src/app/interface/category';\nimport { CategoriesService } from 'src/app/services/categories.service';\n\n@Component({\n  selector: 'app-new-category',\n  templateUrl: './new-category.component.html',\n  styleUrls: ['./new-category.component.scss'],\n})\nexport class NewCategoryComponent implements OnInit {\n  category: Category = {\n    categoryName: '',\n    image: '',\n  };\n  constructor(\n    private categoryService: CategoriesService,\n    private router: Router\n  ) {}\n\n  onSubmit({ valid, value }: NgForm) {\n\n    this.categoryService.newCategory(valid, value).subscribe((data) => {\n      if (data?._id) {\n        this.router.navigate(['']);\n      }\n    });\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"container-fuild mt-4\">\n  <div *ngIf=\"categories; else loading\">\n    <div class=\"row\">\n      <div *ngFor=\"let item of categories\" class=\"col-12 col-md-6 col-lg-6 col-xl-4\">\n        <div class=\"container mt-3\">\n          <div class=\"row justify-content-center\">\n            <img\n              [src]=\"item.image\"\n              [alt]=\"item.categoryName\"\n              class=\"col-12 card-img-top cardImg\"\n            />\n            <div class=\"col-12 mt-2\">\n              <a\n                [routerLink]=\"['/category', item.categoryName]\"\n                class=\"btn btn-dark btn-block btn-lg bg-2\"\n                >{{ item.categoryName }}</a\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loading>\n    <h3>loading</h3>\n  </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/interface/category';\nimport { CategoriesService } from 'src/app/services/categories.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  categories: Category[] = null;\n  constructor(private categoriesServices: CategoriesService) {}\n\n  ngOnInit(): void {\n    this.categoriesServices\n      .getCategories()\n      .subscribe((data) => (this.categories = data));\n  }\n}\n","// const url = {\r\n//   apiUrl: 'https://index-beitar.herokuapp.com/api',\r\n//   imgUrl: 'https://index-beitar.herokuapp.com/',\r\n// };\r\nconst url = {\r\n  apiUrl: '/api',\r\n  imgUrl: '/',\r\n};\r\n// const url = {\r\n//   apiUrl: 'http://localhost:3007/api',\r\n//   imgUrl: 'http://localhost:3007/',\r\n// };\r\nexport default url;\r\n","import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FilesService } from 'src/app/services/files.service';\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.scss'],\n})\nexport class UploadFileComponent implements OnInit {\n  selectedFiles?: FileList;\n  currentFile?: File;\n  progress = 0;\n  message = '';\n  fileInfos?: Observable<any>;\n\n\n  constructor(private filesService: FilesService) {}\n\n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n\n  upload(): void {\n    this.progress = 0;\n\n    if (this.selectedFiles) {\n      const file: File | null = this.selectedFiles.item(0);\n\n      if (file) {\n        this.currentFile = file;\n\n        this.filesService.NewImgUpload(this.currentFile).subscribe(\n          (event: any) => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round(100 * event.loaded / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n              this.fileInfos = this.filesService.getFiles();\n            }\n          },\n          (err: any) => {\n            console.log(err);\n            this.progress = 0;\n\n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the file!';\n            }\n\n            this.currentFile = undefined;\n          });\n\n      }\n\n      this.selectedFiles = undefined;\n    }\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n  <div class=\"col-8\">\n    <label class=\"btn btn-default p-0\">\n      <input type=\"file\" (change)=\"selectFile($event)\" />\n    </label>\n  </div>\n\n  <div class=\"col-4\">\n    <button class=\"btn btn-success btn-sm\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n      Upload\n    </button>\n  </div>\n</div>\n\n<div *ngIf=\"currentFile\" class=\"progress my-3\">\n  <div\n    class=\"progress-bar progress-bar-info progress-bar-striped\"\n    role=\"progressbar\"\n    attr.aria-valuenow=\"{{ progress }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    [ngStyle]=\"{ width: progress + '%' }\"\n  >\n    {{ progress }}%\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"row justify-content-center mt-5 p-4\">\n  <form\n    class=\"text-center form-width br-me bg-3 p-4\"\n    #signUpBusiness=\"ngForm\"\n    (ngSubmit)=\"onSubmit(signUpBusiness)\"\n    novalidate=\"novalidate\"\n  >\n    <h1 class=\"h3 mb-3 font-weight-normal\">הרשמה למנהלים</h1>\n    <label for=\"fullName\" class=\"mt-3\"\n      ><span class=\"text-danger\">*</span>שם מלא</label\n    >\n    <div>\n      <input\n        type=\"text\"\n        #name=\"ngModel\"\n        name=\"name\"\n        [(ngModel)]=\"user.name\"\n        id=\"fullName\"\n        class=\"form-control\"\n        placeholder=\"שם מלא (לא שם העסק)\"\n        required\n        autocomplete=\"full-name\"\n        minlength=\"2\"\n        [ngClass]=\"{\n          'is-valid': name.touched && name.valid,\n          'is-invalid': name.touched && name.invalid\n        }\"\n      />\n\n      <div *ngIf=\"name.errors?.required\" class=\"invalid-feedback\">\n        שדה שם מלא הינו שדה חובה\n      </div>\n      <div *ngIf=\"name.errors?.minlength\" class=\"invalid-feedback\">\n        שם מלא צריך להיות באורך\n        {{ name.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <div>\n      <label for=\"inputEmail\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>כתובת אימייל</label\n      >\n      <input\n        type=\"email\"\n        #email=\"ngModel\"\n        name=\"email\"\n        [(ngModel)]=\"user.email\"\n        id=\"inputEmail\"\n        class=\"form-control\"\n        placeholder=\"אימייל\"\n        required\n        autocomplete=\"email\"\n        pattern=\"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\"\n        [ngClass]=\"{\n          'is-valid': email.touched && email.valid,\n          'is-invalid': email.touched && email.invalid\n        }\"\n      />\n\n      <div *ngIf=\"email.errors?.required\" class=\"invalid-feedback\">\n        שדה אימייל הינו שדה חובה\n      </div>\n      <div *ngIf=\"email.errors?.pattern\" class=\"invalid-feedback\">\n        אנא הכנס אימייל תקין\n      </div>\n    </div>\n    <div>\n      <label for=\"inputPassword\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>סיסמה</label\n      >\n      <input\n        type=\"password\"\n        #password=\"ngModel\"\n        name=\"password\"\n        [(ngModel)]=\"user.password\"\n        id=\"inputPassword\"\n        class=\"form-control\"\n        placeholder=\"סיסמה\"\n        required\n        autocomplete=\"password\"\n        minlength=\"6\"\n        [ngClass]=\"{\n          'is-valid': password.touched && password.valid,\n          'is-invalid': password.touched && password.invalid\n        }\"\n      />\n      <div *ngIf=\"password.errors?.required\" class=\"invalid-feedback\">\n        שדה סיסמה הינו שדה חובה\n      </div>\n      <div *ngIf=\"password.errors?.minlength\" class=\"invalid-feedback\">\n        שדה סיסמה צריך להיות באורך\n        {{ password.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <div>\n      <input type=\"hidden\" name=\"manager\" [(ngModel)]=\"user.manager\" />\n    </div>\n    <button class=\"btn btn-lg bg-1 btn-block mt-3\" type=\"submit\">הירשם</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/interface/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sgin-up-manager',\n  templateUrl: './sgin-up-manager.component.html',\n  styleUrls: ['./sgin-up-manager.component.scss'],\n})\nexport class SginUpManagerComponent implements OnInit {\n  user: User = {\n    manager: true,\n  };\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onSubmit({ valid, value }: NgForm) {\n    this.authService.signUp(valid, value).subscribe((data) => {\n      if (data?._id) {\n        alert(`${data.name} נרשמת בהצלחה`);\n\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n  ngOnInit(): void {}\n}\n","<div\n  *ngIf=\"card; else noCard\"\n  class=\"row justify-content-center card-border pt-5 mt-5\"\n>\n  <div *ngIf=\"card.bizImageDefault[0]; else noImg\">\n    <img\n      [src]=\"card.bizImageDefault[0]\"\n      [alt]=\"card.bizName\"\n      class=\"col-10 col-md-5\"\n    />\n  </div>\n  <div *ngIf=\"card.bizImageWeek[0]; else noImg\">\n    <img\n      [src]=\"card.bizImageWeek[0]\"\n      [alt]=\"card.bizName\"\n      class=\"col-10 col-md-5\"\n    />\n  </div>\n  <ng-template #noImg>\n    <p>אין תמונה </p>\n  </ng-template>\n  <div class=\"col-10\">\n    <div class=\"row justify-content-center\">\n      <h4 class=\"col-12 text-center\">{{ card.bizName }}</h4>\n      <div class=\"col-12 col-md-5 col-lg-5 col-xl-4\">\n        <a\n          [href]=\"['tel:', card.bizPhone]\"\n          class=\"btn btn-success btn-block mt-2\"\n          >{{ card.bizPhone }}</a\n        >\n      </div>\n      <div class=\"col-12 col-md-5 col-lg-5 col-xl-4\">\n        <a\n          [routerLink]=\"['/category', card.bizCategory]\"\n          class=\"btn btn-dark btn-block mt-2\"\n          >{{ card.bizCategory }}</a\n        >\n      </div>\n      <div class=\"col-12 mt-5 border-card\">\n        <p class=\"text-center\">\n          {{ card.bizDescription }}\n        </p>\n      </div>\n    </div>\n    <div *ngIf=\"isTheSameUser\" class=\"row justify-content-center mt-5\">\n      <a\n        [routerLink]=\"['/edit-card', card._id]\"\n        class=\"btn btn-md bg-1 col-5 col-md-4 m-2\"\n        >עריכת כרטיס</a\n      >\n      <a\n        [routerLink]=\"['/delete-card', card._id]\"\n        class=\"btn btn-md btn-danger col-5 col-md-4 m-2\"\n        >מחיקת כרטיס</a\n      >\n    </div>\n  </div>\n</div>\n\n<ng-template #noCard>\n  <h3 class=\"container text-center mt-5\">סבלנות העמוד נטען</h3>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Card } from 'src/app/interface/card';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CardService } from 'src/app/services/card.service';\n\n@Component({\n  selector: 'app-card-details',\n  templateUrl: './card-details.component.html',\n  styleUrls: ['./card-details.component.scss'],\n})\nexport class CardDetailsComponent implements OnInit {\n  paramsId: string = null;\n  card: Card = null;\n  isTheSameUser: boolean = false;\n  constructor(\n    private activateRoute: ActivatedRoute,\n    private cardService: CardService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.activateRoute.params.subscribe((params) =>\n      this.cardService.getCard(params?.id).subscribe((card) => {\n        this.card = card;\n        this.authService.getCurrentUser$.subscribe((user) => {\n          if (user._id === card.user_id) {\n            this.isTheSameUser = true;\n          }\n        });\n      })\n    );\n  }\n}\n","<div class=\"row justify-content-center mt-5 p-4\">\n  <form\n    class=\"text-center form-width br-me bg-3 p-4\"\n    #signUpBusiness=\"ngForm\"\n    (ngSubmit)=\"onSubmit(signUpBusiness)\"\n    novalidate=\"novalidate\"\n  >\n    <h1 class=\"h3 mb-3 font-weight-normal\">התחברות לבעלי עסקים</h1>\n\n    <div>\n      <label for=\"inputEmail\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>כתובת אימייל</label\n      >\n      <input\n        type=\"email\"\n        #email=\"ngModel\"\n        name=\"email\"\n        [(ngModel)]=\"user.email\"\n        id=\"inputEmail\"\n        class=\"form-control\"\n        placeholder=\"אימייל\"\n        required\n        autocomplete=\"email\"\n        pattern=\"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\"\n        [ngClass]=\"{\n          'is-valid': email.touched && email.valid,\n          'is-invalid': email.touched && email.invalid\n        }\"\n      />\n\n      <div *ngIf=\"email.errors?.required\" class=\"invalid-feedback\">\n        שדה אימייל הינו שדה חובה\n      </div>\n      <div *ngIf=\"email.errors?.pattern\" class=\"invalid-feedback\">\n        אנא הכנס אימייל תקין\n      </div>\n    </div>\n    <div>\n      <label for=\"inputPassword\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>סיסמה</label\n      >\n      <input\n        type=\"password\"\n        #password=\"ngModel\"\n        name=\"password\"\n        [(ngModel)]=\"user.password\"\n        id=\"inputPassword\"\n        class=\"form-control\"\n        placeholder=\"סיסמה\"\n        required\n        autocomplete=\"password\"\n        minlength=\"6\"\n        [ngClass]=\"{\n          'is-valid': password.touched && password.valid,\n          'is-invalid': password.touched && password.invalid\n        }\"\n      />\n      <div *ngIf=\"password.errors?.required\" class=\"invalid-feedback\">\n        שדה סיסמה הינו שדה חובה\n      </div>\n      <div *ngIf=\"password.errors?.minlength\" class=\"invalid-feedback\">\n        שדה סיסמה צריך להיות באורך\n        {{ password.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <button class=\"btn btn-lg bg-1  btn-block mt-3\" type=\"submit\">\n      התחברות\n    </button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/interface/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  user: User = {};\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async onSubmit({ valid, value }: NgForm) {\n    await this.authService\n      .logIn(valid, value)\n      .subscribe((data) => {\n        if (data?.user?._id){\n          this.authService.addToken(data?.token)\n          alert(`${data.user?.name} ברוך הבא`)\n          this.router.navigate(['']);\n        }\n      });\n\n\n\n  }\n  ngOnInit(): void {}\n}\n","import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Card } from 'src/app/interface/card';\nimport { FilesService } from 'src/app/services/files.service';\n\n@Component({\n  selector: 'app-edit-card-img',\n  templateUrl: './edit-card-img.component.html',\n  styleUrls: ['./edit-card-img.component.scss'],\n})\nexport class EditCardImgComponent implements OnInit {\n  uploadImages: Card = {\n    bizImageDefault: [],\n    bizImageWeek: [],\n  };\n  selectedFiles?: FileList;\n  currentFile?: File;\n  progress = 0;\n  message = '';\n  constructor(private filesService: FilesService) {}\n\n  selectFile(event: any): void {\n\n    this.selectedFiles = event.target.files;\n  }\n\n  upload(): void {\n    this.progress = 0;\n\n    if (this.selectedFiles) {\n      const file: File | null = this.selectedFiles.item(0);\n\n      if (file) {\n        this.currentFile = file;\n\n        this.filesService.NewImgUpload(this.currentFile).subscribe(\n          (event: any) => {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round((100 * event.loaded) / event.total);\n            } else if (event instanceof HttpResponse) {\n              this.message = event.body.message;\n            }\n          },\n          (err: any) => {\n            console.log(err);\n            this.progress = 0;\n\n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the file!';\n            }\n\n            this.currentFile = undefined;\n          }\n        );\n      }\n\n      this.selectedFiles = undefined;\n    }\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n  <div class=\"col-8\">\n    <label class=\"btn btn-default p-0\">\n      <input\n        type=\"file\"\n        name=\"file\"\n        [(ngModel)]=\"\n          uploadImages.bizImageDefault[uploadImages.bizImageDefault.length]\n        \"\n        (change)=\"selectFile($event)\"\n      />\n    </label>\n  </div>\n\n  <div class=\"col-4\">\n    <button\n      class=\"btn btn-success btn-sm\"\n      [disabled]=\"!selectedFiles\"\n      (click)=\"upload()\"\n    >\n      העלה תמונה\n    </button>\n  </div>\n</div>\n\n<div *ngIf=\"currentFile\" class=\"progress my-3\">\n  <div\n    class=\"progress-bar progress-bar-info progress-bar-striped\"\n    role=\"progressbar\"\n    attr.aria-valuenow=\"{{ progress }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    [ngStyle]=\"{ width: progress + '%' }\"\n  >\n    {{ progress }}%\n  </div>\n</div>\n","<div class=\"row justify-content-center mt-5 p-4\">\n  <form\n    class=\"text-center form-width br-me bg-3 p-4\"\n    #signUpBusiness=\"ngForm\"\n    (ngSubmit)=\"onSubmit(signUpBusiness)\"\n    novalidate=\"novalidate\"\n  >\n    <h1 class=\"h3 mb-3 font-weight-normal\">הרשמה לבעלי עסקים</h1>\n    <label for=\"fullName\" class=\"mt-3\"\n      ><span class=\"text-danger\">*</span> שם מלא</label\n    >\n    <div>\n      <input\n        type=\"text\"\n        #name=\"ngModel\"\n        name=\"name\"\n        [(ngModel)]=\"user.name\"\n        id=\"fullName\"\n        class=\"form-control\"\n        placeholder=\"שם מלא (לא שם העסק)\"\n        required\n        autocomplete=\"full-name\"\n        minlength=\"2\"\n        [ngClass]=\"{\n          'is-valid': name.touched && name.valid,\n          'is-invalid': name.touched && name.invalid\n        }\"\n      />\n\n      <div *ngIf=\"name.errors?.required\" class=\"invalid-feedback\">\n        שם מלא הינו שדה חובה\n      </div>\n      <div *ngIf=\"name.errors?.minlength\" class=\"invalid-feedback\">\n        שם מלא צריך להיות באורך\n        {{ name.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <div>\n      <label for=\"inputEmail\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>כתובת אימייל</label\n      >\n      <input\n        type=\"email\"\n        #email=\"ngModel\"\n        name=\"email\"\n        [(ngModel)]=\"user.email\"\n        id=\"inputEmail\"\n        class=\"form-control\"\n        placeholder=\"אימייל\"\n        required\n        autocomplete=\"email\"\n        pattern=\"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\"\n        [ngClass]=\"{\n          'is-valid': email.touched && email.valid,\n          'is-invalid': email.touched && email.invalid\n        }\"\n      />\n\n      <div *ngIf=\"email.errors?.required\" class=\"invalid-feedback\">\n        אימייל הינו שדה חובה\n      </div>\n      <div *ngIf=\"email.errors?.pattern\" class=\"invalid-feedback\">\n        אנא הכנס אימייל תקין\n      </div>\n    </div>\n    <div>\n      <label for=\"inputPassword\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>סיסמה</label\n      >\n      <input\n        type=\"password\"\n        #password=\"ngModel\"\n        name=\"password\"\n        [(ngModel)]=\"user.password\"\n        id=\"inputPassword\"\n        class=\"form-control\"\n        placeholder=\"סיסמה\"\n        required\n        autocomplete=\"password\"\n        minlength=\"6\"\n        [ngClass]=\"{\n          'is-valid': password.touched && password.valid,\n          'is-invalid': password.touched && password.invalid\n        }\"\n      />\n      <div *ngIf=\"password.errors?.required\" class=\"invalid-feedback\">\n        סיסמה הינו שדה חובה\n      </div>\n      <div *ngIf=\"password.errors?.minlength\" class=\"invalid-feedback\">\n        שדה סיסמה צריך להיות באורך\n        {{ password.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <div>\n      <input type=\"hidden\" name=\"business\" [(ngModel)]=\"user.business\" />\n    </div>\n    <button class=\"btn btn-lg btn-primary btn-block mt-3\" type=\"submit\">\n      הירשם\n    </button>\n\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/interface/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sgin-upbusiness',\n  templateUrl: './sgin-upbusiness.component.html',\n  styleUrls: ['./sgin-upbusiness.component.scss'],\n})\nexport class SginUpbusinessComponent implements OnInit {\n  user: User = {\n    name: '',\n    email: '',\n    password: '',\n    business: true,\n  };\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onSubmit({ valid, value }: NgForm) {\n\n    this.authService\n      .signUp(valid, value)\n      .subscribe((data) => {\n        if (data?._id){\n          alert(`${data.name} נרשמת בהצלחה`)\n          this.router.navigate(['/login']);\n        }\n      });\n\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"row card-border\">\n  <img\n    [src]=\"card.bizImageDefault[0]\"\n    [alt]=\"card.bizName\"\n    class=\"col-12 col-md-5 col-lg-5\"\n  />\n  <div class=\"col-12 col-md-7 col-lg-7\">\n    <div class=\"row justify-content-center\">\n      <h4 class=\"col-12 text-center\">{{ card.bizName }}</h4>\n      <div class=\"col-5 col-md-6 col-lg-6 col-xl-4\">\n        <a\n          [href]=\"['tel:', card.bizPhone]\"\n          class=\"btn btn-success btn-block m-2\"\n          >{{ card.bizPhone }}</a\n        >\n      </div>\n      <div class=\"col-5 col-md-6 col-lg-6 col-xl-4\">\n        <a\n          [routerLink]=\"['/category', card.bizCategory]\"\n          class=\"btn btn-dark btn-block m-2\"\n          >{{ card.bizCategory }}</a\n        >\n      </div>\n      <div class=\"col-8\">\n        <a [routerLink]=\"['/card', card._id]\" class=\"btn btn-block bg-1 m-2\"\n          >מידע נוסף</a\n        >\n      </div>\n    </div>\n    <div *ngIf=\"isTheSameUser\" class=\"row justify-content-center\">\n      <a [routerLink]=\"['/edit-card', card._id]\" class=\"btn btn-md bg-1 col-3 m-2\"\n        >עריכת כרטיס</a\n      >\n      <a [routerLink]=\"['/delete-card', card._id]\" class=\"btn btn-md btn-danger col-3 m-2\"\n        >מחיקת כרטיס</a\n      >\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Card } from 'src/app/interface/card';\n\n@Component({\n  selector: 'app-card-id',\n  templateUrl: './card-id.component.html',\n  styleUrls: ['./card-id.component.scss'],\n})\nexport class CardIdComponent implements OnInit {\n  @Input() card: Card = null;\n  @Input() userId: any = '';\n  isTheSameUser: boolean = false;\n  constructor() {\n\n  }\n  fn(){\n    \n\n    if (this.card?.user_id === this.userId) {\n      this.isTheSameUser = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.fn();\n  }\n}\n","<div *ngIf=\"userLogged?._id\">\n  <div *ngIf=\"userLogged?.manager\">\n    <div class=\"bg-2\">\n      <a routerLink=\"/\" class=\"btn btn-dark btn-sm btn-black mr-2\">\n        יצירת כרטיס חדש\n      </a>\n\n      <a routerLink=\"/\" class=\"btn btn-dark btn-sm btn-black mr-2\">\n        יצירת קטגוריה חדשה\n      </a>\n    </div>\n  </div>\n  <div *ngIf=\"userLogged?.business\">\n    <div class=\"row bg-2\">\n      <a routerLink=\"/new-card\" class=\"btn btn-dark btn-sm btn-black mr-2\">\n        יצירת כרטיס חדש\n      </a>\n\n      <a routerLink=\"/new-category\" class=\"btn btn-dark btn-sm btn-black mr-2\">\n        יצירת קטגוריה חדשה\n      </a>\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/interface/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-dash-Connected',\n  templateUrl: './dash-Connected.component.html',\n  styleUrls: ['./dash-Connected.component.scss'],\n})\nexport class DashConnectedComponent implements OnInit {\n  // to do ngIf if user is exist\n  userLogged: User = null;\n  token: string = 'token';\n\n  constructor(private auth: AuthService, location: Location) {\n    location.onUrlChange(() => this.ifUserLogged());\n  }\n  // check if user is logged by token\n  ifUserLogged = () => {\n    this.auth.getCurrentUser$.subscribe((user) => (this.userLogged = user));\n  };\n\n  ngOnInit(): void {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'index-beitar';\n}\n","<header class=\"container-fuild p-0 m-0\">\r\n  <app-nav-bar></app-nav-bar>\r\n  <app-dash-Connected></app-dash-Connected>\r\n</header>\r\n<main class=\"my-container\">\r\n  <router-outlet></router-outlet>\r\n</main>\r\n<footer></footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './components/dashboard/nav-bar/nav-bar.component';\nimport { FooterComponent } from './components/dashboard/footer/footer.component';\nimport { DashConnectedComponent } from './components/dashboard/dash-connected/dash-connected.component';\nimport { NewCardComponent } from './components/cards/new-card/new-card.component';\nimport { EditCardComponent } from './components/cards/edit-card/edit-card.component';\nimport { EditCardImgComponent } from './components/cards/edit-card-img/edit-card-img.component';\nimport { CardIdComponent } from './components/cards/card-id/card-id.component';\nimport { NewCategoryComponent } from './components/categories/new-category/new-category.component';\nimport { EditCategoryComponent } from './components/categories/edit-category/edit-category.component';\nimport { DeleteCategoryComponent } from './components/categories/delete-category/delete-category.component';\nimport { CategoryIdComponent } from './components/categories/category-id/category-id.component';\nimport { DeleteCardComponent } from './components/cards/delete-card/delete-card.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { LogOutComponent } from './components/auth/log-out/log-out.component';\nimport { SginUpManagerComponent } from './components/auth/sgin-up-manager/sgin-up-manager.component';\nimport { SginUpbusinessComponent } from './components/auth/sgin-upbusiness/sgin-upbusiness.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CardDetailsComponent } from './components/cards/card-details/card-details.component';\nimport { UploadFileComponent } from './components/files/upload-file/upload-file.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    FooterComponent,\n    DashConnectedComponent,\n    NewCardComponent,\n    EditCardComponent,\n    EditCardImgComponent,\n    CardIdComponent,\n    NewCategoryComponent,\n    EditCategoryComponent,\n    DeleteCategoryComponent,\n    CategoryIdComponent,\n    DeleteCardComponent,\n    LoginComponent,\n    LogOutComponent,\n    SginUpManagerComponent,\n    SginUpbusinessComponent,\n    HomeComponent,\n    AboutComponent,\n    CardDetailsComponent,\n    UploadFileComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport url from '../commen/config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilesService {\n  // default url request\n  apiUrl = url.apiUrl;\n  imgUrl = url.imgUrl;\n  // this is default headers\n  headers = new HttpHeaders()\n    .set('auth-token', localStorage.getItem('token'))\n    .set(\n      'Content-Type',\n      'multipart/form-data; boundary=<calculated when request is sent>'\n    );\n\n  constructor(private http: HttpClient) {}\n\n  NewImgUpload(file: File): Observable<any> {\n    const formData: FormData = new FormData();\n    console.log(file);\n    formData.append('one-file', file, file.name);\n    console.log(formData);\n\n    return this.http.post<File>(`${this.apiUrl}/files/new-file`, formData, {\n      reportProgress: true,\n      responseType: 'json',\n      headers: this.headers,\n    });\n  }\n  getFiles(): Observable<any> {\n    return this.http.get(`${this.imgUrl}/files`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let result = false;\n    this.authService.getCurrentUser$.subscribe((auth) => {\n      if (!auth) {\n        if (\n          state.url === '/login' ||\n          state.url === '/sign-up-business' ||\n          state.url === '/sign-up-manager'\n        ) {\n          result = true;\n        }\n      }\n      if (auth?._id) {\n        if (\n          state.url === '/login' ||\n          state.url === '/sign-up-business' ||\n          state.url === '/sign-up-manager'\n        ) {\n          result = false;\n        } else {\n          result = true;\n        }\n      }\n    });\n    return result;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CardService } from 'src/app/services/card.service';\n\n@Component({\n  selector: 'app-delete-card',\n  templateUrl: './delete-card.component.html',\n  styleUrls: ['./delete-card.component.scss'],\n})\nexport class DeleteCardComponent implements OnInit {\n  constructor(\n    private cardService: CardService,\n    private router: Router,\n    private activateRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.activateRoute.params.subscribe((params) =>\n      this.cardService.deleteCard(params?.id).subscribe((res) => {\n        if (res?._id) {\n          alert(`${res?.bizName} נמחק בהצלחה`);\n          this.router.navigate(['']);\n        }\n      })\n    );\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-1\">\n  <a class=\"navbar-brand\" href=\"/\">אינדקס העסקים בביתר עילית</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarsExample05\"\n    aria-controls=\"navbarsExample05\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExample05\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/\"\n          >דף הבית <span class=\"sr-only\">(current)</span></a\n        >\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-link dropdown-toggle active\"\n          href=\"#\"\n          id=\"dropdown01\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          >קטגוריות עסקים</a\n        >\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n          <div *ngIf=\"categories\">\n            <div *ngFor=\"let item of categories\">\n              <a\n                class=\"dropdown-item\"\n                [routerLink]=\"['/category', item.categoryName]\"\n                >{{ item.categoryName }}</a\n              >\n            </div>\n          </div>\n        </div>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-link dropdown-toggle active\"\n          href=\"#\"\n          id=\"dropdown02\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          >משתמשים</a\n        >\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdown02\">\n          <div *ngIf=\"token?._id; else notLogged\">\n            <a class=\"dropdown-item\" [routerLink]=\"['/logout']\">התנתקות</a>\n          </div>\n          <ng-template #notLogged>\n            <a class=\"dropdown-item\" [routerLink]=\"['/login']\">התחברות</a>\n            <a class=\"dropdown-item\" [routerLink]=\"['/sign-up-business']\"\n              >הרשמה לבעלי עסקים</a\n            >\n          </ng-template>\n        </div>\n      </li>\n    </ul>\n    <form class=\"form-inline my-2 my-md-0\">\n      <input\n        class=\"form-control search-me\"\n        type=\"search\"\n        name=\"searchCard\"\n        [(ngModel)]=\"userSearchCard\"\n        (ngModelChange)=\"searchCard($event)\"\n        minlength=\"1\"\n        placeholder=\"חיפוש עסק\"\n      />\n    </form>\n    <div *ngIf=\"userSearchCardResult?.length > 0; else noSearch\">\n      <div class=\"dropdown-menu show bg-3\" aria-labelledby=\"dropdown03\">\n        <div *ngFor=\"let card of userSearchCardResult\">\n          <a class=\"dropdown-item\" [routerLink]=\"['/card', card?._id]\" (click)=\"onClickResult()\">{{\n            card?.bizName\n          }}</a>\n        </div>\n      </div>\n    </div>\n    <ng-template #noSearch></ng-template>\n  </div>\n</nav>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Card } from 'src/app/interface/card';\nimport { Category } from 'src/app/interface/category';\nimport { User } from 'src/app/interface/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CardService } from 'src/app/services/card.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss'],\n})\nexport class NavBarComponent implements OnInit {\n  categories: Category[] = null;\n  cards: Card[] = null;\n  token: User = null;\n  userSearchCard: string = '';\n  userSearchCardResult: Card[] = null;\n  constructor(\n    private categoryService: CategoriesService,\n    private authService: AuthService,\n    private cardService: CardService,\n    private location: Location,\n    private router: Router\n  ) {}\n\n  // check if user is logged by token\n  ifUserLogged = async () => {\n    await this.authService.getCurrentUser$.subscribe(\n      (user) => (this.token = user)\n    );\n  };\n\n  onClickResult() {\n    this.userSearchCardResult = null;\n    this.userSearchCard = '';\n  }\n\n  searchCard(e) {\n\n    if (e?.length > 0) {\n      let search = e?.split(' ');\n      this.userSearchCardResult = this.cards.filter((card) =>\n        search.some((item) =>\n          card.bizName.toLowerCase().includes(item.toLowerCase())\n        )\n      );\n    } else {\n      this.userSearchCardResult = null;\n    }\n  }\n\n  ngOnInit(): void {\n    this.location.onUrlChange((res) => {\n\n      if (res) {\n        this.ifUserLogged();\n        this.categoryService\n          .getCategories()\n          .subscribe((data) => (this.categories = data));\n        this.cardService.getCards().subscribe((cards) => (this.cards = cards));\n      }\n    });\n  }\n}\n","<div class=\"row justify-content-center mt-5 p-4\">\n  <form\n    class=\"text-center form-width br-me bg-3 p-4\"\n    #newCategory=\"ngForm\"\n    (ngSubmit)=\"onSubmit(newCategory)\"\n    novalidate=\"novalidate\"\n  >\n    <h1 class=\"h3 mb-3 font-weight-normal\">יצירת קטגוריה חדשה</h1>\n\n    <div>\n      <label for=\"inputcategoryName\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>שם הקטגוריה החדשה</label\n      >\n      <input\n        type=\"text\"\n        #categoryName=\"ngModel\"\n        name=\"categoryName\"\n        [(ngModel)]=\"category.categoryName\"\n        id=\"inputcategoryName\"\n        class=\"form-control\"\n        placeholder=\"שם הקטגוריה החדשה\"\n        required\n        autocomplete=\"categoryName\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': categoryName.touched && categoryName.valid,\n          'is-invalid': categoryName.touched && categoryName.invalid\n        }\"\n      />\n      <div *ngIf=\"categoryName.errors?.required\" class=\"invalid-feedback\">\n        שדה שם הקטגוריה החדשה הינו שדה חובה\n      </div>\n      <div *ngIf=\"categoryName.errors?.minlength\" class=\"invalid-feedback\">\n        שדה שם הקטגוריה החדשה צריך להיות באורך\n        {{ categoryName.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>תמונה קטגוריה\n      </label>\n      <input\n        type=\"text\"\n        #image=\"ngModel\"\n        name=\"image\"\n        [(ngModel)]=\"category.image\"\n        id=\"inputimage\"\n        class=\"form-control\"\n        placeholder=\"תמונה קטגוריה (קישור לאתר חיצוני)\"\n        required\n        autocomplete=\"image\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': image.touched && image.valid,\n          'is-invalid': image.touched && image.invalid\n        }\"\n      />\n      <div *ngIf=\"image.errors?.required\" class=\"invalid-feedback\">\n        שדה תמונה קטגוריה הינו שדה חובה\n      </div>\n      <div *ngIf=\"image.errors?.minlength\" class=\"invalid-feedback\">\n        שדה תמונה קטגוריה צריך להיות באורך\n        {{ image.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n    <button class=\"btn btn-lg btn-primary btn-block mt-3\" type=\"submit\">\n      עדכן קטגוריה\n    </button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/interface/category';\nimport { CategoriesService } from 'src/app/services/categories.service';\n\n@Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.scss'],\n})\nexport class EditCategoryComponent implements OnInit {\n  category: Category = {\n    categoryName: '',\n    image: '',\n  };\n  paramsId: string = '';\n  constructor(\n    private categoryService: CategoriesService,\n    private router: Router,\n    activateRoute: ActivatedRoute\n  ) {\n    activateRoute.params.subscribe((params) => (this.paramsId = params?.id));\n  }\n\n  onSubmit({ valid, value }: NgForm) {\n\n    this.categoryService\n      .updateCategory(this.category?._id, valid, value)\n      .subscribe((data) => {\n\n        if (data?._id) {\n          alert(`${data?.categoryName} עודכן בהצלחה`);\n\n          this.router.navigate(['']);\n        }\n      });\n  }\n  ngOnInit(): void {\n    this.categoryService\n      .getCategories()\n      .subscribe(\n        (category) =>\n          (this.category = category.find(\n            (item) => item.categoryName === this.paramsId\n          ))\n      );\n  }\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../interface/user';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport url from '../commen/config';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  // decoder token (jwt)\n  helper = new JwtHelperService();\n  // default url request\n  apiUrl = url.apiUrl;\n  // this is default headers\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private location: Location\n  ) {}\n\n  // login for business & manager\n  logIn(valid, value): Observable<any> {\n    if (valid) {\n      return this.http.post<any>(`${this.apiUrl}/auth`, JSON.stringify(value), {\n        headers: this.headers,\n      });\n    }\n  }\n\n  // subscribe for business & manager\n  signUp(valid, value): Observable<User> {\n    if (valid) {\n      return this.http.post<User>(\n        `${this.apiUrl}/users/new-user`,\n        JSON.stringify(value),\n        {\n          headers: this.headers,\n        }\n      );\n    }\n  }\n\n  // check if the token is from my server\n  private getCurrentUser(): User {\n    const jwt = localStorage.getItem('token');\n    if (!jwt) {\n      return null;\n    }\n    const jwtDecode = <User>this.helper.decodeToken(jwt);\n\n    if (jwtDecode?.user || jwtDecode?.business || jwtDecode?.manager) {\n      return jwtDecode;\n    } else {\n      return null;\n    }\n  }\n\n  getCurrentUser$: Observable<User> = new Observable<User>((subscriber) => {\n    subscriber.next(this.getCurrentUser());\n  });\n\n  addToken(token) {\n    localStorage.setItem('token', token);\n  }\n\n  // logout by clear token\n  logout(): any {\n    localStorage.clear();\n  }\n}\n","<div class=\"row justify-content-center mt-5 p-4\">\n  <form\n    class=\"text-center br-me form-width bg-3 p-4 mt-4\"\n    #editCard=\"ngForm\"\n    (ngSubmit)=\"onSubmit(editCard)\"\n    novalidate=\"novalidate\"\n  >\n    <h1 class=\"h3 mb-3 font-weight-normal\">עדכון כרטיס</h1>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>שם העסק\n      </label>\n      <input\n        type=\"text\"\n        #bizName=\"ngModel\"\n        name=\"bizName\"\n        [(ngModel)]=\"card.bizName\"\n        id=\"inputbizName\"\n        class=\"form-control\"\n        placeholder=\"שם העסק\"\n        required\n        autocomplete=\"bizName\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizName.touched && bizName.valid,\n          'is-invalid': bizName.touched && bizName.invalid\n        }\"\n      />\n      <div *ngIf=\"bizName.errors?.required\" class=\"invalid-feedback\">\n        שדה שם העסק הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizName.errors?.minlength\" class=\"invalid-feedback\">\n        שדה שם קטגוריה צריך להיות באורך\n        {{ bizName.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>קטגורית העסק\n      </label>\n      <div *ngIf=\"categories; else noCategories\">\n        <select\n          name=\"bizCategory\"\n          id=\"bizCategory\"\n          class=\"form-control text-center\"\n          #bizCategory=\"ngModel\"\n          [(ngModel)]=\"card.bizCategory\"\n          minlength=\"2\"\n          defaultValue=\"\"\n          required\n          [ngClass]=\"{\n            'is-valid': bizCategory.touched && bizCategory.valid,\n            'is-invalid': bizCategory.touched && bizCategory.invalid\n          }\"\n        >\n          <option value=\"\" disabled>בחר קטגוריה</option>\n          <option\n            *ngFor=\"let category of categories\"\n            [value]=\"category.categoryName\"\n          >\n            {{ category.categoryName }}\n          </option>\n        </select>\n        <div *ngIf=\"bizCategory.errors?.required\" class=\"invalid-feedback\">\n          שדה תמונה קטגוריה הינו שדה חובה\n        </div>\n        <div *ngIf=\"bizCategory.errors?.minlength\" class=\"invalid-feedback\">\n          שדה תמונה קטגוריה צריך להיות באורך\n          {{ bizCategory.errors?.minlength.requiredLength }} לפחות\n        </div>\n      </div>\n      <ng-template #noCategories>\n        <p class=\"form-control text-center\">אין קטגוריות</p>\n      </ng-template>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>כתובת העסק\n      </label>\n      <input\n        type=\"text\"\n        #bizAddress=\"ngModel\"\n        name=\"bizAddress\"\n        [(ngModel)]=\"card.bizAddress\"\n        id=\"inputbizAddress\"\n        class=\"form-control\"\n        placeholder=\"כתובת העסק\"\n        required\n        autocomplete=\"bizAddress\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizAddress.touched && bizAddress.valid,\n          'is-invalid': bizAddress.touched && bizAddress.invalid\n        }\"\n      />\n      <div *ngIf=\"bizAddress.errors?.required\" class=\"invalid-feedback\">\n        שדה כתובת העסק הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizAddress.errors?.minlength\" class=\"invalid-feedback\">\n        שדה כתובת העסק צריך להיות באורך\n        {{ bizAddress.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>מס' טלפון של העסק\n      </label>\n      <input\n        type=\"text\"\n        #bizPhone=\"ngModel\"\n        name=\"bizPhone\"\n        [(ngModel)]=\"card.bizPhone\"\n        id=\"inputbizPhone\"\n        class=\"form-control\"\n        placeholder=\"מס' טלפון של העסק\"\n        required\n        autocomplete=\"bizPhone\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizPhone.touched && bizPhone.valid,\n          'is-invalid': bizPhone.touched && bizPhone.invalid\n        }\"\n      />\n      <div *ngIf=\"bizPhone.errors?.required\" class=\"invalid-feedback\">\n        שדה טלפון הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizPhone.errors?.minlength\" class=\"invalid-feedback\">\n        שדה טלפון צריך להיות באורך\n        {{ bizPhone.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>מידע נוסף על העסק ועוד...\n      </label>\n      <textarea\n        #bizDescription=\"ngModel\"\n        name=\"bizDescription\"\n        [(ngModel)]=\"card.bizDescription\"\n        id=\"inputbizDescription\"\n        class=\"form-control\"\n        placeholder=\"מידע נוסף על העסק ועוד...\"\n        required\n        autocomplete=\"bizDescription\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizDescription.touched && bizDescription.valid,\n          'is-invalid': bizDescription.touched && bizDescription.invalid\n        }\"\n        rows=\"3\"\n      ></textarea>\n\n      <div *ngIf=\"bizDescription.errors?.required\" class=\"invalid-feedback\">\n        שדה מידע נוסף הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizDescription.errors?.minlength\" class=\"invalid-feedback\">\n        שדה מידע נוסף צריך להיות באורך\n        {{ bizDescription.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <button class=\"btn btn-lg bg-1 btn-block mt-3\" type=\"submit\">\n      עדכון כרטיס\n    </button>\n    <a\n      [routerLink]=\"['/edit-card/', paramsId, 'img']\"\n      class=\"btn btn-lg bg-2 btn-block mt-3\"\n      >עריכת תמונות הכרטיס</a\n    >\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Card } from 'src/app/interface/card';\nimport { Category } from 'src/app/interface/category';\nimport { CardService } from 'src/app/services/card.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\n\n@Component({\n  selector: 'app-edit-card',\n  templateUrl: './edit-card.component.html',\n  styleUrls: ['./edit-card.component.scss'],\n})\nexport class EditCardComponent implements OnInit {\n  card: Card = {\n    bizName: '',\n    bizCategory: '',\n    bizAddress: '',\n    bizPhone: '',\n    bizDescription: '',\n  };\n  categories: Category[] = null;\n  paramsId: string = '';\n\n  constructor(\n    private cardService: CardService,\n    private categoriesService: CategoriesService,\n    private router: Router,\n    activateRoute: ActivatedRoute\n  ) {\n    activateRoute.params.subscribe((params) => (this.paramsId = params?.id));\n  }\n\n  onSubmit({ valid, value }: NgForm) {\n\n    this.cardService\n      .updateCard(this.paramsId, valid, value)\n      .subscribe((data) => {\n        if (data?._id) {\n          alert(\n            `כרטיס של העסק \"${data.bizName}\" בקטגורית \"${data.bizCategory}\" עודכן בהצלחה`\n          );\n          this.router.navigate(['']);\n        }\n      });\n  }\n  ngOnInit(): void {\n    this.categoriesService\n      .getCategories()\n      .subscribe((categories) => (this.categories = categories));\n    this.cardService\n      .getCard(this.paramsId)\n      .subscribe((card) => (this.card = card));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","<a [routerLink]=\"['/edit-category', paramsId]\" class=\"btn bg-1 m-2\"\n  >עריכת קטגוריה</a\n>\n<a [routerLink]=\"['/delete-category', paramsId]\" class=\"btn btn-danger m-2\"\n  >מחיקת קטגוריה</a\n>\n\n<div *ngIf=\"cards; else loading\">\n  <div *ngFor=\"let card of cards\" class=\"container\">\n    <app-card-id [card]=\"card\" [userId]=\"user?._id\"></app-card-id>\n  </div>\n</div>\n\n<ng-template #loading>\n  <h3>loading</h3>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Card } from 'src/app/interface/card';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CardService } from 'src/app/services/card.service';\n\n@Component({\n  selector: 'app-category-id',\n  templateUrl: './category-id.component.html',\n  styleUrls: ['./category-id.component.scss'],\n})\nexport class CategoryIdComponent implements OnInit {\n  cards: Card[] = null;\n  paramsId: string = '';\n  user: any = null;\n  constructor(\n    private activateRoute: ActivatedRoute,\n    private cardService: CardService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.activateRoute.params.subscribe((params) => {\n      this.paramsId = params?.id;\n      this.authService.getCurrentUser$.subscribe((user) => (this.user = user));\n\n      this.cardService\n        .getCards()\n        .subscribe(\n          (cards) =>\n            (this.cards = cards.filter(\n              (card) => card.bizCategory === params?.id\n            ))\n        );\n    });\n  }\n}\n","<div class=\"row justify-content-center mt-5 p-4\">\n  <form\n    class=\"text-center br-me form-width bg-3 p-4\"\n    #newCard=\"ngForm\"\n    (ngSubmit)=\"onSubmit(newCard)\"\n    novalidate=\"novalidate\"\n  >\n    <h1 class=\"h3 mb-3 font-weight-normal\">יצירת כרטיס חדש</h1>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>שם העסק\n      </label>\n      <input\n        type=\"text\"\n        #bizName=\"ngModel\"\n        name=\"bizName\"\n        [(ngModel)]=\"card.bizName\"\n        id=\"inputbizName\"\n        class=\"form-control \"\n        placeholder=\"שם העסק\"\n        required\n        autocomplete=\"bizName\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizName.touched && bizName.valid,\n          'is-invalid': bizName.touched && bizName.invalid\n        }\"\n      />\n      <div *ngIf=\"bizName.errors?.required\" class=\"invalid-feedback\">\n        שדה שם העסק הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizName.errors?.minlength\" class=\"invalid-feedback\">\n        שדה שם קטגוריה צריך להיות באורך\n        {{ bizName.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>קטגורית העסק\n      </label>\n      <div *ngIf=\"categories; else noCategories\">\n        <select\n          name=\"bizCategory\"\n          id=\"bizCategory\"\n          class=\"form-control text-center\"\n          #bizCategory=\"ngModel\"\n          [(ngModel)]=\"card.bizCategory\"\n          minlength=\"2\"\n          defaultValue=\"\"\n          required\n          [ngClass]=\"{\n            'is-valid': bizCategory.touched && bizCategory.valid,\n            'is-invalid': bizCategory.touched && bizCategory.invalid\n          }\"\n        >\n          <option value=\"\" disabled>בחר קטגוריה</option>\n          <option\n            *ngFor=\"let category of categories\"\n            [value]=\"category.categoryName\"\n          >\n            {{ category.categoryName }}\n          </option>\n        </select>\n        <div *ngIf=\"bizCategory.errors?.required\" class=\"invalid-feedback\">\n          שדה תמונה קטגוריה הינו שדה חובה\n        </div>\n        <div *ngIf=\"bizCategory.errors?.minlength\" class=\"invalid-feedback\">\n          שדה תמונה קטגוריה צריך להיות באורך\n          {{ bizCategory.errors?.minlength.requiredLength }} לפחות\n        </div>\n      </div>\n      <ng-template #noCategories>\n        <p class=\"form-control text-center\">אין קטגוריות</p>\n      </ng-template>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>כתובת העסק\n      </label>\n      <input\n        type=\"text\"\n        #bizAddress=\"ngModel\"\n        name=\"bizAddress\"\n        [(ngModel)]=\"card.bizAddress\"\n        id=\"inputbizAddress\"\n        class=\"form-control \"\n        placeholder=\"כתובת העסק\"\n        required\n        autocomplete=\"bizAddress\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizAddress.touched && bizAddress.valid,\n          'is-invalid': bizAddress.touched && bizAddress.invalid\n        }\"\n      />\n      <div *ngIf=\"bizAddress.errors?.required\" class=\"invalid-feedback\">\n        שדה כתובת העסק הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizAddress.errors?.minlength\" class=\"invalid-feedback\">\n        שדה כתובת העסק צריך להיות באורך\n        {{ bizAddress.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>מס' טלפון של העסק\n      </label>\n      <input\n        type=\"text\"\n        #bizPhone=\"ngModel\"\n        name=\"bizPhone\"\n        [(ngModel)]=\"card.bizPhone\"\n        id=\"inputbizPhone\"\n        class=\"form-control \"\n        placeholder=\"מס' טלפון של העסק\"\n        required\n        autocomplete=\"bizPhone\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizPhone.touched && bizPhone.valid,\n          'is-invalid': bizPhone.touched && bizPhone.invalid\n        }\"\n      />\n      <div *ngIf=\"bizPhone.errors?.required\" class=\"invalid-feedback\">\n        שדה טלפון הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizPhone.errors?.minlength\" class=\"invalid-feedback\">\n        שדה טלפון צריך להיות באורך\n        {{ bizPhone.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <div>\n      <label for=\"inputimage\" class=\"mt-3\"\n        ><span class=\"text-danger\">*</span>מידע נוסף על העסק ועוד...\n      </label>\n      <textarea\n        #bizDescription=\"ngModel\"\n        name=\"bizDescription\"\n        [(ngModel)]=\"card.bizDescription\"\n        id=\"inputbizDescription\"\n        class=\"form-control \"\n        placeholder=\"מידע נוסף על העסק ועוד...\"\n        required\n        autocomplete=\"bizDescription\"\n        minlength=\"3\"\n        [ngClass]=\"{\n          'is-valid': bizDescription.touched && bizDescription.valid,\n          'is-invalid': bizDescription.touched && bizDescription.invalid\n        }\"\n        rows=\"3\"\n      ></textarea>\n\n      <div *ngIf=\"bizDescription.errors?.required\" class=\"invalid-feedback\">\n        שדה מידע נוסף הינו שדה חובה\n      </div>\n      <div *ngIf=\"bizDescription.errors?.minlength\" class=\"invalid-feedback\">\n        שדה מידע נוסף צריך להיות באורך\n        {{ bizDescription.errors?.minlength.requiredLength }} לפחות\n      </div>\n    </div>\n\n    <button class=\"btn btn-lg bg-1 btn-block mt-3\" type=\"submit\">\n      יצירת כרטיס חדש\n    </button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Card } from 'src/app/interface/card';\nimport { Category } from 'src/app/interface/category';\nimport { CardService } from 'src/app/services/card.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\n\n@Component({\n  selector: 'app-new-card',\n  templateUrl: './new-card.component.html',\n  styleUrls: ['./new-card.component.scss'],\n})\nexport class NewCardComponent implements OnInit {\n  card: Card = {\n    bizName: '',\n    bizCategory: '',\n    bizAddress: '',\n    bizPhone: '',\n    bizDescription: '',\n  };\n  categories: Category[] = null;\n  constructor(\n    private cardService: CardService,\n    private categoriesService: CategoriesService,\n    private router: Router\n  ) {}\n\n  onSubmit({ valid, value }: NgForm) {\n\n    this.cardService.newCard(valid, value).subscribe((data) => {\n      if (data?._id) {\n        alert(\n          `כרטיס של העסק \"${data.bizName}\" בקטגורית \"${data.bizCategory}\" נוצר בהצלחה`\n        );\n        this.router.navigate(['']);\n      }\n    });\n  }\n  ngOnInit(): void {\n    this.categoriesService\n      .getCategories()\n      .subscribe((categories) => (this.categories = categories));\n  }\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport url from '../commen/config';\nimport { Card } from '../interface/card';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CardService {\n  // default url request\n  apiUrl = url.apiUrl;\n  // this is default headers\n  headers = new HttpHeaders()\n    .set('auth-token', localStorage.getItem('token'))\n    .set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) {}\n\n  // observable to get all card\n  getCards(): Observable<Card[]> {\n    return this.http.get<Card[]>(`${this.apiUrl}/cards/all-cards`);\n  }\n\n  // observable to get one card\n  getCard(id): Observable<Card> {\n    return this.http.get<Card>(`${this.apiUrl}/cards/${id}`);\n  }\n\n  // observable to create a new card\n  newCard(valid, data): Observable<Card> {\n    if (valid) {\n      return this.http.post<Card>(\n        `${this.apiUrl}/cards/new-card`,\n        JSON.stringify(data),\n        {\n          headers: this.headers,\n        }\n      );\n    }\n  }\n\n  // observable to update card\n  updateCard(id, valid, data): Observable<Card> {\n    if (valid) {\n      return this.http.put<Card>(\n        `${this.apiUrl}/cards/${id}`,\n        JSON.stringify(data),\n        {\n          headers: this.headers,\n        }\n      );\n    }\n  }\n\n  // observable to update card img\n  updateCardImg(id, data): Observable<Card> {\n    return this.http.put<Card>(\n      `${this.apiUrl}/cards/${id}/upload-img`,\n      JSON.stringify(data),\n      {\n        headers: this.headers,\n      }\n    );\n  }\n\n  // observable delete card\n  deleteCard(id): Observable<Card> {\n    return this.http.delete<Card>(`${this.apiUrl}/cards/${id}`, {\n      headers: this.headers,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LogOutComponent } from './components/auth/log-out/log-out.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { SginUpManagerComponent } from './components/auth/sgin-up-manager/sgin-up-manager.component';\nimport { SginUpbusinessComponent } from './components/auth/sgin-upbusiness/sgin-upbusiness.component';\nimport { CardDetailsComponent } from './components/cards/card-details/card-details.component';\nimport { DeleteCardComponent } from './components/cards/delete-card/delete-card.component';\nimport { EditCardImgComponent } from './components/cards/edit-card-img/edit-card-img.component';\nimport { EditCardComponent } from './components/cards/edit-card/edit-card.component';\nimport { NewCardComponent } from './components/cards/new-card/new-card.component';\nimport { CategoryIdComponent } from './components/categories/category-id/category-id.component';\nimport { DeleteCategoryComponent } from './components/categories/delete-category/delete-category.component';\nimport { EditCategoryComponent } from './components/categories/edit-category/edit-category.component';\nimport { NewCategoryComponent } from './components/categories/new-category/new-category.component';\nimport { AuthGuard } from './guard/auth.guard';\nimport { AboutComponent } from './pages/about/about.component';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'category/:id', component: CategoryIdComponent },\n  { path: 'card/:id', component: CardDetailsComponent },\n  {\n    path: 'sign-up-business',\n    component: SginUpbusinessComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'sign-up-manager',\n    component: SginUpManagerComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'login', component: LoginComponent, canActivate: [AuthGuard] },\n  { path: 'logout', component: LogOutComponent, canActivate: [AuthGuard] },\n  {\n    path: 'new-category',\n    component: NewCategoryComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-category/:id',\n    component: EditCategoryComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'delete-category/:id',\n    component: DeleteCategoryComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'new-card', component: NewCardComponent, canActivate: [AuthGuard] },\n  {\n    path: 'edit-card/:id',\n    component: EditCardComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'delete-card/:id',\n    component: DeleteCardComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'edit-card/:id/img',\n    component: EditCardImgComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-log-out',\n  templateUrl: './log-out.component.html',\n  styleUrls: ['./log-out.component.scss'],\n})\nexport class LogOutComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {\n    this.logout()\n  }\n\n  async logout() {\n    await this.authService.logout();\n    this.router.navigate(['']);\n  }\n  ngOnInit(): void {}\n}\n","\n<h4>התנקת בהצלחה</h4>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport url from '../commen/config';\nimport { Category } from '../interface/category';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  // default url request\n  apiUrl = url.apiUrl;\n  // this is default headers\n  headers = new HttpHeaders()\n    .set('auth-token', window.localStorage.getItem('token'))\n    .set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) {}\n\n  // observable to get all categories\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(`${this.apiUrl}/categories`);\n  }\n  // observable to get one category\n  getCategory(id): Observable<Category> {\n    return this.http.get<Category>(`${this.apiUrl}/categories/${id}`);\n  }\n\n  // observable to create a new category\n  newCategory(valid, data): Observable<Category> {\n    if (valid) {\n      return this.http.post<Category>(\n        `${this.apiUrl}/categories/new-category`,\n        JSON.stringify(data),\n        {\n          headers: this.headers,\n        }\n      );\n    }\n  }\n\n  // observable to update category\n  updateCategory(id, valid, data): Observable<Category> {\n    if (valid) {\n      return this.http.put<Category>(\n        `${this.apiUrl}/categories/${id}`,\n        JSON.stringify(data),\n        {\n          headers: this.headers,\n        }\n      );\n    }\n  }\n\n  // observable to delete category\n  deleteCategory(id): Observable<Category> {\n    return this.http.delete<Category>(`${this.apiUrl}/categories/${id}`, {\n      headers: this.headers,\n    });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/interface/category';\nimport { CategoriesService } from 'src/app/services/categories.service';\n\n@Component({\n  selector: 'app-delete-category',\n  templateUrl: './delete-category.component.html',\n  styleUrls: ['./delete-category.component.scss'],\n})\nexport class DeleteCategoryComponent implements OnInit {\n  constructor(\n    private categoryService: CategoriesService,\n    private router: Router,\n    private activateRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.activateRoute.params.subscribe((params) =>\n      this.categoryService.getCategories().subscribe((category) =>\n        this.categoryService\n          .deleteCategory(\n            category.find((item) => item.categoryName === params?.id)?._id\n          )\n          .subscribe((res) => {\n            if (res?._id) {\n              alert(`${res?.categoryName} נמחק בהצלחה`);\n              this.router.navigate(['']);\n            }\n          })\n      )\n    );\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}