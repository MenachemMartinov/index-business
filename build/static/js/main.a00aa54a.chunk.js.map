{"version":3,"sources":["common/services/httpService.js","common/services/userService.js","common/prodecectdRoute.jsx","common/services/cardsServices.js","common/forms/input.jsx","common/forms/textTara.jsx","common/forms/select.jsx","common/forms/form.jsx","components/auth/login.jsx","components/auth/logOut.jsx","components/auth/signUp.jsx","components/auth/signUpBusiness.jsx","components/auth/signUpManager.jsx","common/services/favoritesService.js","components/cardId.jsx","components/category.jsx","components/card.jsx","components/categoryId.jsx","components/dashboard/navBar.jsx","components/dashboard/manager.jsx","components/dashboard/business.jsx","components/editCard.jsx","components/editCardImg.jsx","components/newCard.jsx","common/services/categoryService.js","components/newCategory.jsx","components/myFavorite.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["axios","interceptors","request","use","config","tokenHeaders","localStorage","getItem","headers","common","response","error","status","toast","Promise","reject","http","get","post","put","patch","delete","tokenKay","email","password","a","apiUrl","data","setItem","token","formData","userService","login","signUp","getCurrentUser","jwt","JWT","jwtDecode","user","business","manager","err","logOut","removeItem","getJWT","ProtectedRoute","Component","component","render","biz","rest","currentUser","props","to","pathname","state","from","location","cardData","id","cardServices","getCards","getCard","newCard","updateCard","updateCardImage","deleteCard","Input","name","label","className","htmlFor","type","TextTara","rows","placeholder","Select","value","option","defaultValue","disabled","map","categoryName","_id","Form","handelSubmit","e","preventDefault","errors","validate","setState","doSubmit","schema","Joi","abortEarly","details","path","message","handelChange","target","errorsCopy","errorsMessage","validateProperty","updateFormData","handelChangeFile","files","sendFile","FormData","append","uploadCardImages","push","rode","success","console","log","renderInput","onChange","renderInputFile","renderSelect","this","obj","LogIn","string","required","min","UserService","window","onSubmit","noValidate","renderButton","LogOut","SignUp","body","history","replace","SignUpBusiness","SignUpManger","favoritesService","newFavorites","ifExistFavorites","getAllFavorites","deleteFavorites","CardId","card","bizAddress","bizCategory","bizDescription","bizImage","bizImageDefault","bizImageWeek","bizName","bizPhone","favoriteIsExist","favorites","length","componentDidMount","match","params","user_id","src","imgUrl","alt","href","onClick","Category","allCategories","category","image","Card","useState","favoritesExist","setFavoritesExist","CategoryId","allCards","cardsPerCategory","filter","NavBar","categories","cards","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","item","Search","filterOfSearch","split","cardsFind","some","toLowerCase","includes","filterCards","ManagerDashboard","BusinessDashboard","EditCard","array","renderTextTara","EditCardImg","dark","renderButtonImg","NewCard","data1","data2","categoryService","getCategories","newCategory","NewCategory","MyFavorite","myFavorite","favorite","of_card","favoriteCard","App","allCardsPerCategory","exactCategory","exact","Login","SignUpManager","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a00aa54a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * to add the token to the headers request\r\n */\r\naxios.interceptors.request.use((config) => {\r\n  const tokenHeaders = localStorage.getItem(\"token\");\r\n  config.headers.common[\"auth-token\"] = tokenHeaders;\r\n  return config;\r\n});\r\n\r\n/**\r\n * to intercept the errors\r\n */\r\naxios.interceptors.response.use(null, (error) => {\r\n  if (error.response && error.response.status >= 403) {\r\n    toast.error(\"שגיאה לא צפויה \");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\n/**\r\n * to use easier with axios create new object what export the axios deferent option \r\n */\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst tokenKay = \"token\";\r\n\r\n/**\r\n * the function get the token from the localStorage\r\n */\r\nexport function getJWT() {\r\n  return localStorage.getItem(tokenKay);\r\n}\r\n\r\n/**\r\n * the function clear the token from the localStorage\r\n */\r\nexport function logOut() {\r\n  localStorage.removeItem(tokenKay);\r\n  toast(\"התנתקת בהצלחה\");\r\n}\r\n\r\n/**\r\n * the function check if the token is kind of the system\r\n */\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKay);\r\n    const JWT = jwtDecode(jwt);\r\n    if (JWT?.user || JWT?.business || JWT?.manager) {\r\n      return JWT;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * the function send to the server request to login\r\n * the function getting 2 parameters\r\n * 1 the email\r\n * 2 the password\r\n * the function save in the localStorage\r\n */\r\nexport async function login(email, password) {\r\n  const { data } = await http.post(`${apiUrl}/auth`, { email, password });\r\n  localStorage.setItem(tokenKay, data.token);\r\n}\r\n\r\n/**\r\n * the function send to the server request to subscribe to the site\r\n * the function getting 1 parameter\r\n * 1 the form data\r\n */\r\nexport async function signUp(formData) {\r\n  const { data } = await http.post(`${apiUrl}/users/new-user`, formData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst userService = {\r\n  login,\r\n  signUp,\r\n  getCurrentUser,\r\n  logOut,\r\n  getJWT,\r\n};\r\n\r\nexport default userService;\r\n","import userService from \"./services/userService\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n/**\r\n * the component check if the user has been logged\r\n * if the user is logged the component will return the (component or render) what gibeon \r\n */\r\nconst ProtectedRoute = ({ component: Component, render, biz, ...rest }) => {\r\n  const currentUser = userService.getCurrentUser();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!currentUser || (biz && !currentUser.biz)) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/sign-in\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * the function send to the server request to all cards\r\n */\r\nexport async function getCards() {\r\n  const { data } = await http.get(`${apiUrl}/cards/all-cards`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to the create a new card\r\n * is getting 1 parameter\r\n * 1 the card data\r\n */\r\nexport async function newCard(cardData) {\r\n  const { data } = await http.post(`${apiUrl}/cards/new-card`, cardData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to get card by id\r\n * the function getting 1 parameter\r\n * 1 the card id\r\n */\r\nexport async function getCard(id) {\r\n  const { data } = await http.get(`${apiUrl}/cards/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to update Card\r\n * the function getting 2 parameters\r\n * 1 the id of the card\r\n * 2 the card data\r\n */\r\nexport async function updateCard(id, cardData) {\r\n  const { data } = await http.put(`${apiUrl}/cards/${id}`, cardData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to update the image of the Card with gibeon id\r\n * the function getting 2 parameters\r\n * 1 the id of the card\r\n * 2 the card data (image)\r\n */\r\nexport async function updateCardImage(id, cardData) {\r\n  const { data } = await http.put(`${apiUrl}/cards/${id}/upload-img`, cardData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to remove card\r\n * the function getting 1 parameter\r\n * 1 the id of the card\r\n */\r\nexport async function deleteCard(id) {\r\n  const { data } = await http.delete(`${apiUrl}/cards/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst cardServices = {\r\n  getCards,\r\n  getCard,\r\n  newCard,\r\n  updateCard,\r\n  updateCardImage,\r\n  deleteCard,\r\n};\r\n\r\nexport default cardServices;\r\n","/**\r\n * input field component which receives 3 parameters\r\n * 1 the name of the field\r\n * 2 the label for the field\r\n * 3 span for errors by the field\r\n * 4 more option for select field\r\n */\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group text-center\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        {...rest}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n      />\r\n      {/*errors*/}\r\n      <span className=\"text-danger\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","/**\r\n * textTara field component which receives 3 parameters\r\n * 1 the name of the field\r\n * 2 the rows for the field\r\n * 3 the placeholder for the field\r\n * 4 more option for select field\r\n */\r\n\r\nconst TextTara = ({ name, rows, placeholder, ...rest }) => {\r\n  return (\r\n    <textarea\r\n      className=\"form-control\"\r\n      {...rest}\r\n      name={name}\r\n      rows={rows}\r\n      placeholder={placeholder}\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default TextTara;\r\n","/**\r\n * select field component which receives 5 parameters\r\n * 1 the name of the field\r\n * 2 the label for the field\r\n * 3 span for errors by the field\r\n * 4 the value of the field\r\n * 5 the option for the selected field\r\n * 6 more option for select field\r\n */\r\n\r\nconst Select = (props) => {\r\n  const { name, label, error, value, option, ...rest } = props;\r\n  return (\r\n    <div className=\"form-group text-center\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select\r\n        {...rest}\r\n        name={name}\r\n        id={name}\r\n        defaultValue={value}\r\n        className=\"form-control\"\r\n      >\r\n        <option value=\"\" disabled>\r\n          {label}\r\n        </option>\r\n\r\n        {option.map((option) => (\r\n          <option key={option._id} value={option.categoryName}>\r\n            {option.categoryName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <span className=\"text-danger\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","/**\r\n * all import for the file\r\n */\r\nimport Joi from \"joi-browser\";\r\nimport React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport TextTara from \"./textTara\";\r\nimport Select from \"./select\";\r\nimport cardServices from \"../services/cardsServices\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Form extends Component {\r\n  /**\r\n   * the function what run on submit the parameter is event\r\n   * the function check if exist a error\r\n   * if a error is exist the \"setState.errors\" cangue with the new error\r\n   * if not exist a error the \"doSubmit\" function run\r\n   */\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (!errors) {\r\n      this.doSubmit();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the function check if exist a error in one field\r\n   * if a error is exist the \"setState.errors\" cangue with the new error\r\n   * if error not exist will return null\r\n   */\r\n  validateProperty(name, value) {\r\n    const schema = { [name]: this.schema[name] };\r\n    const obj = { [name]: value };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  }\r\n\r\n  /**\r\n   * the function check if exist a error in all fields\r\n   */\r\n  validate = () => {\r\n    const {\r\n      state: { formData },\r\n      schema,\r\n    } = this;\r\n\r\n    const { error } = Joi.validate(formData, schema, {\r\n      abortEarly: false,\r\n    });\r\n    if (!error) {\r\n      return null;\r\n    }\r\n    const errors = {};\r\n    for (const { path, message } of error.details) {\r\n      errors[path[0]] = message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  /**\r\n   * the function is following on cangues on the form fields\r\n   */\r\n  handelChange = ({ target: { value, name } }) => {\r\n    const { errors, formData } = this.state;\r\n\r\n    // validate input\r\n    const errorsCopy = { ...errors } || {};\r\n    const errorsMessage = this.validateProperty(name, value);\r\n\r\n    if (errorsMessage) {\r\n      errorsCopy[name] = errorsMessage;\r\n    } else {\r\n      delete errorsCopy[name];\r\n    }\r\n\r\n    // validate form\r\n    const updateFormData = { ...formData };\r\n    updateFormData[name] = value;\r\n    // update state\r\n    this.setState({ formData: updateFormData, errors: errorsCopy });\r\n  };\r\n\r\n  \r\n  /**\r\n   * the function is following on cangues on the form files field\r\n   */\r\n  handelChangeFile = async ({ target: { files, name } }) => {\r\n    if (!files[0]) {\r\n      toast(\"לא בחרת קובץ \");\r\n      return;\r\n    }\r\n    const { formData } = this.state;\r\n\r\n    const sendFile = new FormData();\r\n    sendFile.append(\"file\", files[0], files[0].name);\r\n    try {\r\n      const value = await cardServices.uploadCardImages(sendFile);\r\n      // validate form\r\n      const updateFormData = { ...formData };\r\n      updateFormData[name].push(value?.path);\r\n      // update state\r\n      this.setState({ formData: updateFormData });\r\n      if (value?.path) {\r\n        this.setState({ rode: true });\r\n        toast.success(\"התמונה עלתה\");\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  /** \r\n   * the function render the input component\r\n   * the function getting 3 parameters\r\n   * 1 the name of the field\r\n   * 2 the label for the field\r\n   * 3 the type of the field the basic type is \"text\"\r\n   * \r\n   */\r\n  renderInput = (name, label, type = \"text\", ...rest) => {\r\n    const { formData, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        value={formData[name]}\r\n        onChange={this.handelChange}\r\n        error={errors && errors[name]}\r\n        name={name}\r\n        label={label}\r\n        rest={rest}\r\n      />\r\n    );\r\n  };\r\n\r\n  /** \r\n   * the function render the input component\r\n   * the function getting 3 parameters\r\n   * 1 the name of the field\r\n   * 2 the label for the field\r\n   * 3 the type of the field the basic type is \"file\"\r\n   * the deferent between the \"renderInput\" is the function that run onChange\r\n   */\r\n  renderInputFile = (name, label, type = \"file\", ...rest) => {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        onChange={this.handelChangeFile}\r\n        error={errors && errors[name]}\r\n        name={name}\r\n        label={label}\r\n        rest={rest}\r\n      />\r\n    );\r\n  };\r\n\r\n  /** \r\n   * the function render the select component\r\n   * the function getting 3 parameters \r\n   * 1 the name of the field\r\n   * 2 the label for the field\r\n   * 3 the option for the select field (array)\r\n   */\r\n  renderSelect = (name, label, option = []) => {\r\n    const { formData, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        onChange={this.handelChange}\r\n        value={formData[name]}\r\n        error={errors[name]}\r\n        option={option}\r\n      ></Select>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * the function render the textTara component\r\n   * the function getting 3 parameters \r\n   * 1 the name of the field\r\n   * 2 the rows of the field\r\n   * 3 the placeholder for the field\r\n   */\r\n  renderTextTara(name, rows, placeholder) {\r\n    const { formData, errors } = this.state;\r\n    return (\r\n      <TextTara\r\n        name={name}\r\n        rows={rows}\r\n        placeholder={placeholder}\r\n        onChange={this.handelChange}\r\n        value={formData[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * the function render the forms button \r\n   * the function getting 1 parameter\r\n   * 1 the label of the button\r\n   */\r\n  renderButton(label = \"\") {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-block btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  \r\n  /**\r\n   * the function render the forms button in a form of send files\r\n   * the function getting 1 parameter\r\n   * 1 the label of the button\r\n   */\r\n  renderButtonImg(label = \"\") {\r\n    return (\r\n      <button disabled={!this.state.rode} className=\"btn btn-block btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Form } from \"../../common/forms\";\r\nimport UserService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n/**\r\n * class component for login\r\n */\r\nclass LogIn extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors \r\n   * the function will run the \"login\" function from the \"userService\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { email, password } = this.state.formData;\r\n\r\n    try {\r\n      await UserService.login(email, password);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h3>התחברות לאתר </h3>\r\n          </div>\r\n          <div className=\"col-lg-6 \">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign In !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import UserService from \"../../common/services/userService\";\r\n\r\n/***\r\n * the component run the \"logOut\" function from \"userService\"\r\n */\r\nconst LogOut = () => {\r\n  UserService.logOut();\r\n  window.location = \"/\";\r\n\r\n  return null;\r\n};\r\n\r\nexport default LogOut;\r\n","import React from \"react\";\r\nimport { Form } from \"../../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n/***\r\n * the subscribe component\r\n * the component will typeof class\r\n */\r\nclass SignUp extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      password: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n    name: Joi.string().required().min(2).label(\"Name\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"signUp\" function from the \"userService\" end catch the errors\r\n   * end the reload the page to \"/login\"\r\n   */\r\n  async doSubmit() {\r\n    const body = { ...this.state.formData, user: true };\r\n\r\n    try {\r\n      await userService.signUp(body);\r\n      toast.success(\"המשתמש נוצר\");\r\n      this.props.history.replace(\"/login\");\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: \"error email is exit\" } });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h2>הרשמה למשתמשים</h2>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign Up !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Form } from \"../../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n/***\r\n * the subscribe component\r\n * this component is subscribe for business\r\n * the component will typeof class\r\n */\r\nclass SignUpBusiness extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      password: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n    name: Joi.string().required().min(2).label(\"Name\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"signUp\" function from the \"userService\" end catch the errors\r\n   * end the reload the page to \"/login\"\r\n   */\r\n  async doSubmit() {\r\n    const body = { ...this.state.formData, business: true };\r\n\r\n    try {\r\n      await userService.signUp(body);\r\n      toast.success(\"המשתמש נוצר\");\r\n      this.props.history.replace(\"/login\");\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: \"error email is exit\" } });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h2>הרשמה לבעלי עסקים </h2>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign Up !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpBusiness;\r\n","import React from \"react\";\r\nimport { Form } from \"../../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n\r\n/***\r\n * the subscribe component\r\n * the component will typeof class\r\n */\r\nclass SignUpManger extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      password: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n    name: Joi.string().required().min(2).label(\"Name\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"signUp\" function from the \"userService\" end catch the errors\r\n   * end the reload the page to \"/login\"\r\n   */\r\n  async doSubmit() {\r\n    const body = { ...this.state.formData, manager: true };\r\n\r\n    try {\r\n      await userService.signUp(body);\r\n      toast.success(\"המשתמש נוצר\");\r\n      this.props.history.replace(\"/login\");\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: \"error email is exit\" } });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h2>הרשמה למנהלים </h2>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign Up !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpManger;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * the function send request to the server to save new favorite\r\n * the function getting 1 parameter\r\n * 1 the id of the favorite card\r\n */\r\nexport async function newFavorites(id) {\r\n  const { data } = await http.post(\r\n    `${apiUrl}/favorites/${id}/new-favorites`,\r\n    null\r\n  );\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send request to the server to check if the card is favorite\r\n * the function getting 1 parameter\r\n * 1 the id of the card\r\n */\r\nexport async function ifExistFavorites(id) {\r\n  const { data } = await http.get(`${apiUrl}/favorites/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send request to the server to delete the card from the favorites cards list\r\n * the function getting 1 parameter\r\n * 1 the id of the card to delete from the favorites cards list\r\n */\r\nexport async function deleteFavorites(id) {\r\n  const { data } = await http.delete(`${apiUrl}/favorites/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send request to the server to get the list of all favorites cards\r\n */\r\nexport async function getAllFavorites() {\r\n  const { data } = await http.get(`${apiUrl}/favorites/all-favorites`);\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst favoritesService = {\r\n  newFavorites,\r\n  ifExistFavorites,\r\n  getAllFavorites,\r\n  deleteFavorites,\r\n};\r\n\r\nexport default favoritesService;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport favoritesService from \"../common/services/favoritesService\";\r\nimport { imgUrl } from \"../common/config.json\";\r\n\r\nimport \"./card.css\";\r\n\r\n/***\r\n * cardId component\r\n */\r\nclass CardId extends Component {\r\n  /***\r\n   * the state of the \"cardId\"\r\n   */\r\n\r\n  state = {\r\n    card: {\r\n      _id: \"\",\r\n      bizAddress: \"\",\r\n      bizCategory: \"\",\r\n      bizDescription: \"\",\r\n      bizImage: [],\r\n      bizImageDefault: \"\",\r\n      bizImageWeek: \"\",\r\n      bizName: \"\",\r\n      bizPhone: \"\",\r\n    },\r\n    favoriteIsExist: false,\r\n  };\r\n\r\n  /***\r\n   * the favorites function check if the card is favorite\r\n   * if is true the favorites state changes to false\r\n   * if is false the favorites state changes to true\r\n   */\r\n  favorites = async () => {\r\n    const exist = await favoritesService.ifExistFavorites(this.state.card._id);\r\n    if (exist.length > 0) {\r\n      this.setState({ favoriteIsExist: true });\r\n    } else {\r\n      this.setState({ favoriteIsExist: false });\r\n    }\r\n  };\r\n\r\n  /***\r\n   * the function run after started the component\r\n   * the function run the function to get the exact card by id end the function run the \"favorites\" function\r\n   */\r\n  componentDidMount = async () => {\r\n    const data = await cardServices.getCard(this.props.match.params.id);\r\n    this.setState({\r\n      card: data,\r\n    });\r\n    this.favorites();\r\n  };\r\n\r\n  /***\r\n   * render the jsx\r\n   */\r\n  render() {\r\n    const {\r\n      _id,\r\n      bizCategory,\r\n      bizDescription,\r\n      bizImageDefault,\r\n      bizImageWeek,\r\n      bizName,\r\n      bizPhone,\r\n      user_id,\r\n    } = this.state.card;\r\n    return (\r\n      <div className=\"col-12 m-0 mt-4 p-0 \">\r\n        <div className=\"container\">\r\n          <div className=\"row p-1 no-gutters text-center rounded cardHeight cardBackground\">\r\n            <div className=\"col-12 \">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <img\r\n                    src={`${imgUrl}/${\r\n                      bizImageDefault[bizImageDefault.length - 1]\r\n                    }`}\r\n                    className=\"card-img inline cardImg\"\r\n                    alt={`bizImageDefault of:${bizName} of: ${bizCategory}`}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <img\r\n                    src={`${imgUrl}/${bizImageWeek[bizImageWeek.length - 1]}`}\r\n                    className=\"card-img inline cardImg\"\r\n                    alt={`bizImageWeek of:${bizName} of: ${bizCategory}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 \">\r\n              <div className=\"row justify-content-md-center p-2\">\r\n                <div className=\"col-12 \">\r\n                  <h4>{bizName}</h4>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                  <a\r\n                    href={`tel:${bizPhone}`}\r\n                    className=\"btn btn-success btn-block\"\r\n                  >\r\n                    {bizPhone}\r\n                  </a>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                  <Link\r\n                    className=\"btn btn-dark btn-block\"\r\n                    to={`/category/${bizCategory}`}\r\n                  >\r\n                    קטגוריה: {bizCategory}\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-12 text-center pt-4 p-1 cardLinks\">\r\n                  <p className=\" bg-primary m-3\">\r\n                    מידע נוסף על העסק:\r\n                    <br /> {bizDescription}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-12 \"></div>\r\n                {/** if this card created by the user wes logged*/}\r\n                {user_id === this.props.id && (\r\n                  <>\r\n                    <div className=\"col-12 \"></div>\r\n                    <div className=\"col-6 pt-4\">\r\n                      <Link\r\n                        className=\"btn btn-dark btn-sm\"\r\n                        to={`/card/${_id}/edit`}\r\n                      >\r\n                        עריכת כרטיס\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"col-6 pt-4 \">\r\n                      <Link\r\n                        className=\"btn btn-danger btn-sm\"\r\n                        onClick={() => cardServices.deleteCard(_id)}\r\n                        to=\"/\"\r\n                      >\r\n                        מחיקת כרטיס\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                {/** if this card is not favorite*/}\r\n                {this.props.id && !this.state.favoriteIsExist && (\r\n                  <button\r\n                    className=\"btn btn-success btn-block m-3\"\r\n                    onClick={async () => {\r\n                      const res = await favoritesService.newFavorites(_id);\r\n                      if (res) {\r\n                        this.setState({ favoriteIsExist: true });\r\n                      }\r\n                    }}\r\n                  >\r\n                    הוספה למעודפים\r\n                  </button>\r\n                )}\r\n                {/** if this card is favorite*/}\r\n                {this.props.id && this.state.favoriteIsExist && (\r\n                  <button\r\n                    className=\"btn btn-success btn-block m-3\"\r\n                    onClick={async () => {\r\n                      const res = await favoritesService.deleteFavorites(_id);\r\n                      if (res) {\r\n                        this.favorites();\r\n                      }\r\n                    }}\r\n                  >\r\n                    הסרה מהמעודפים\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardId;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport \"./category.css\";\r\n\r\n/***\r\n * the category component getting 1 parameter\r\n * 1 all Categories\r\n */\r\nconst Category = ({ allCategories }) => {\r\n  return (\r\n    <div className=\"row m-0 p-0 pt-4 pb-3\">\r\n      {/** check if all categories is exist*/}\r\n      {allCategories?.length > 0 &&\r\n        allCategories.map((category) => {\r\n          return (\r\n            <div\r\n              key={category.categoryName}\r\n              className=\"col-12 col-md-6 col-lg-4 pt-4\"\r\n            >\r\n              <div className=\"container \">\r\n                <div className=\"row justify-content-md-center\">\r\n                  <div className=\"col-12 alignItemsCenter\">\r\n                    <img\r\n                      className=\"cord-img-top inline cardImg \"\r\n                      src={category.image}\r\n                      alt={`category-${category.categoryName}`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <Link\r\n                      to={`/category/${category.categoryName}`}\r\n                      className=\"btn btn-primary btn-block btn-lg\"\r\n                    >\r\n                      {category.categoryName}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport \"./card.css\";\r\nimport { imgUrl } from \"../common/config.json\";\r\nimport favoritesService from \"../common/services/favoritesService\";\r\n\r\n/***\r\n * the card component getting 2 parameters\r\n * 1 the card object\r\n * 2 the user id to check if the card has been created by the same user\r\n */\r\nconst Card = ({\r\n  card: { _id, bizCategory, bizImageDefault, bizName, bizPhone, user_id },\r\n  id,\r\n}) => {\r\n  /***\r\n   * the state for favorites\r\n   * this started with false\r\n   */\r\n  const [favoritesExist, setFavoritesExist] = useState(false);\r\n\r\n  /***\r\n   * the favorites function check if the card is favorite\r\n   * if is true the favorites state changes to false\r\n   * if is false the favorites state changes to true\r\n   */\r\n  const favorites = async () => {\r\n    const exist = await favoritesService.ifExistFavorites(_id);\r\n    if (exist.length > 0) {\r\n      setFavoritesExist(true);\r\n    } else {\r\n      setFavoritesExist(false);\r\n    }\r\n  };\r\n  /***\r\n   * run the favorites function\r\n   */\r\n  favorites();\r\n\r\n  /***\r\n   * render the jsx\r\n   */\r\n  return (\r\n    <div className=\"col-12 m-0 mt-4 p-0  \">\r\n      <div className=\"container\">\r\n        <div className=\"row p-1 no-gutters text-center rounded  cardHeight cardBackground\">\r\n          <div className=\"col-12 col-md-5 col-lg-4 \">\r\n            <img\r\n              src={`${imgUrl}/${bizImageDefault[bizImageDefault.length - 1]}`}\r\n              className=\"card-img inline cardImg\"\r\n              alt={`bizCategory: ${bizCategory}`}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-7 col-lg-8\">\r\n            <div className=\"row justify-content-md-center p-2\">\r\n              <div className=\"col-12 \">\r\n                <h4>{bizName}</h4>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                <a\r\n                  href={`tel:${bizPhone}`}\r\n                  className=\"btn btn-success btn-block\"\r\n                >\r\n                  {bizPhone}\r\n                </a>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                <Link\r\n                  className=\"btn btn-dark btn-block\"\r\n                  to={`/category/${bizCategory}`}\r\n                >\r\n                  קטגוריה: {bizCategory}\r\n                </Link>\r\n              </div>\r\n              <div className=\"col-12 \"></div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 pt-4 \">\r\n                <Link className=\"btn btn-primary btn-block\" to={`/card/${_id}`}>\r\n                  למידע נוסף לחץ כאן\r\n                </Link>\r\n              </div>\r\n              {/** if this card created by the user wes logged*/}\r\n              {user_id === id && (\r\n                <>\r\n                  <div className=\"col-12 \"></div>\r\n                  <div className=\"col-6 pt-4\">\r\n                    <Link\r\n                      className=\"btn btn-dark btn-sm\"\r\n                      to={`/card/${_id}/edit`}\r\n                    >\r\n                      עריכת כרטיס\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-6 pt-4 \">\r\n                    <Link\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={() => cardServices.deleteCard(_id)}\r\n                      to=\"/\"\r\n                    >\r\n                      מחיקת כרטיס\r\n                    </Link>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/** if this card is not favorite*/}\r\n              {id && !favoritesExist && (\r\n                <button\r\n                  className=\"btn btn-success btn-block m-3\"\r\n                  onClick={async () => {\r\n                    const res = await favoritesService.newFavorites(_id);\r\n                    if (res) {\r\n                      setFavoritesExist(true);\r\n                    }\r\n                  }}\r\n                >\r\n                  הוספה למעודפים\r\n                </button>\r\n              )}\r\n              {/** if this card is favorite*/}\r\n              {id && favoritesExist && (\r\n                <button\r\n                  className=\"btn btn-success btn-block m-3\"\r\n                  onClick={async () => {\r\n                    const res = await favoritesService.deleteFavorites(_id);\r\n                    if (res) {\r\n                      favorites();\r\n                    }\r\n                  }}\r\n                >\r\n                  הסרה מהמעודפים\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./card\";\r\n\r\n\r\n/***\r\n * the category component getting 4 parameter\r\n * 1 get the params.id\r\n * 2 get all cards \r\n * 3 get the all category\r\n * 4 get the user id \r\n */\r\nconst CategoryId = ({ match: { params }, allCards, allCategories, id }) => {\r\n  for (let category of allCategories) {\r\n    if (category.categoryName === params.id) {\r\n      const cardsPerCategory = allCards.filter(\r\n        (card) => card.bizCategory === params.id\r\n      );\r\n      return cardsPerCategory?.map((card) => <Card key={card._id} card={card} id={id} />);\r\n    }\r\n  }\r\n  return <h2>not found</h2>;\r\n};\r\n\r\nexport default CategoryId;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/***\r\n * the \"navBar\" component getting 3 parameters\r\n * 1 the user info and\r\n * 2 all categories\r\n * 3 the cards to can search\r\n */\r\nconst NavBar = ({ user, categories, cards }) => {\r\n  /***\r\n   * the state for the \"filterCards\" function\r\n   * is started with null\r\n   */\r\n  const [state, setState] = useState(null);\r\n  /***\r\n   * the function getting 1 parameter \"Search\"\r\n   * the function search end filter the all cards \r\n   */\r\n  const filterCards = (Search) => {\r\n    if (cards) {\r\n      if (Search.length > 0) {\r\n        let filterOfSearch = Search.split(\" \");\r\n\r\n        const cardsFind = cards.filter((card) =>\r\n          filterOfSearch.some((item) =>\r\n            card.bizName.toLowerCase().includes(item)\r\n          )\r\n        );\r\n        setState(cardsFind);\r\n      } else {\r\n        setState(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            אינדקס העסקים ביתר עילית\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarManager\"\r\n            aria-controls=\"navbarManager\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarManager\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active dropdown\">\r\n                <Link\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  to=\"#\"\r\n                  id=\"dropdown01\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"true\"\r\n                >\r\n                  תפריט ניוט באתר\r\n                </Link>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\r\n                  {categories?.length > 0 &&\r\n                    categories.map((item) => {\r\n                      return (\r\n                        <Link\r\n                          key={item._id}\r\n                          className=\"dropdown-item\"\r\n                          to={`/category/${item.categoryName}`}\r\n                        >\r\n                          {item.categoryName}\r\n                        </Link>\r\n                      );\r\n                    })}\r\n                  {/** if user is not logged*/}\r\n                  {!user && (\r\n                    <>\r\n                      <Link className=\"dropdown-item\" to=\"/login\">\r\n                        התחברות\r\n                      </Link>\r\n                      <Link className=\"dropdown-item\" to=\"/sign-up-business\">\r\n                        הרשמה לבעלי עסקים\r\n                      </Link>\r\n                      <Link className=\"dropdown-item\" to=\"/sign-up-user\">\r\n                        הרשמה ללקוחות\r\n                      </Link>\r\n                      <Link className=\"dropdown-item\" to=\"/sign-up-manager\">\r\n                        הרשמה למנהלים\r\n                      </Link>\r\n                    </>\r\n                  )}\r\n                  {/** if user is logged*/}\r\n                  {user && (\r\n                    <>\r\n                      <Link className=\"dropdown-item\" to=\"/logout\">\r\n                        התנתקות\r\n                      </Link>\r\n                      <Link className=\"dropdown-item\" to=\"/myFavorite\">\r\n                        המעודפים שלי\r\n                      </Link>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form>\r\n              <input\r\n                type=\"search\"\r\n                name=\"searchCard\"\r\n                id=\"searchCard\"\r\n                className=\"form-control\"\r\n                placeholder=\"חיפוש לפי שם העסק\"\r\n                onChange={({ target: { value } }) => filterCards(value)}\r\n                \r\n              />\r\n            </form>\r\n            {state?.length > 0 && (\r\n              <div className=\"dropdown-menu show ml-5\">\r\n                {state.map((item) => (\r\n                  <Link\r\n                    key={item._id}\r\n                    className=\" btn btn-md btn-block \"\r\n                    onClick={() => setState(null)}\r\n                    to={`/card/${item._id}`}\r\n                  >\r\n                    {item.bizName}\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n\r\n/***\r\n * the \"ManagerDashboard\" component \r\n * the component will return a seceded dashboard with the 2 button \r\n * 1 to go create a new business card.\r\n * 2 to create a new category\r\n */\r\nconst ManagerDashboard = () => {\r\n  return (\r\n    <div className=\"container-fluid bg-success p-0 m-0\">\r\n      <Link className=\"btn btn-dark btn-sm m-0\" to=\"/new-card\">\r\n        כרטיס עסקים חדש\r\n      </Link>{\" \"}\r\n      <Link className=\"btn btn-dark btn-sm m-0\" to=\"/new-category\">\r\n        קטגוריה חדשה\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerDashboard;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n/***\r\n * the \"BusinessDashboard\" component \r\n * the component will return a seceded dashboard with the a button to go create a new business card.\r\n */\r\nconst BusinessDashboard = () => {\r\n  return (\r\n    <div className=\"container-fluid bg-success p-0 m-0\">\r\n      <Link className=\"btn btn-dark btn-sm m-0\" to=\"/new-card\">\r\n        כרטיס עסקים חדש\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessDashboard;\r\n","import React from \"react\";\r\nimport { Form } from \"../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/***\r\n * \"editCard\" component\r\n */\r\nclass EditCard extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      bizName: \"\",\r\n      bizCategory: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: [],\r\n      bizImageDefault: \"\",\r\n      bizImageWeek: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    bizName: Joi.string().required(),\r\n    bizCategory: Joi.string().required(),\r\n    bizDescription: Joi.string().required(),\r\n    bizAddress: Joi.string().required(),\r\n    bizPhone: Joi.string().required(),\r\n    bizImage: Joi.array(),\r\n    bizImageDefault: Joi.string(),\r\n    bizImageWeek: Joi.string(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"newCard\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData } = this.state;\r\n    console.log(formData);\r\n    try {\r\n      await cardServices.newCard(formData);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ formData: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row \">\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizName\", \"שם העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderSelect(\r\n                  \"bizCategory\",\r\n                  \"קטגורית העסק\",\r\n                  this.props.categories\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizAddress\", \"כתובת העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizPhone\", \"מס' טלפון של העסק\", \"tel\")}\r\n              </div>\r\n              <div className=\"col-12 \">\r\n                {this.renderTextTara(\"bizDescription\", 3, \"תיאור העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 mt-3 \">\r\n                {this.renderButton(\"צור כרטיס חדש \")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className=\"col-12\">\r\n            <Link\r\n              className=\"btn btn-primary btn-md mt-4\"\r\n              to={`/card/${this.props.match.params.id}/edit-img`}\r\n            >\r\n              העלאת תמונות חדשות\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCard;\r\n","import React from \"react\";\r\nimport { Form } from \"../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/***\r\n * \"editCardImg\" component\r\n * this component is jest to upload new card images\r\n */\r\nclass EditCardImg extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      bizImage: [],\r\n      bizImageDefault: [],\r\n      bizImageWeek: [],\r\n    },\r\n    errors: {},\r\n    rode: false,\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    bizImage: Joi.array(),\r\n    bizImageDefault: Joi.array(),\r\n    bizImageWeek: Joi.array(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"updateCardImage\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData, rode } = this.state;\r\n    if (rode) {\r\n      const res = await cardServices.updateCardImage(\r\n        this.props.match.params.id,\r\n        formData\r\n      );\r\n      if (res._id === this.props.match.params.id) {\r\n        toast.success(\"הכרטיס עודכן\");\r\n        window.location = \"/\";\r\n      } else {\r\n        toast.error(\"הכרטיס לא עודכן\");\r\n      }\r\n    } else {\r\n      toast.dark(\"אין תמונות לעלאה \");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 col-md-8 col-lg-6 text-center\">\r\n            <h3> העלאת תמונות חדשות כללים </h3>\r\n            <p>\r\n              1: ישנם שלושה סוגי אפשרויות לעלאה של תמונה חדשה <br />\r\n              1.1: תמונה של הלוגו של החנות או תמונה של החנות <br />\r\n              2.1: תמונה של מבצעי השבוע <br />\r\n              3.1: תמונות אחרות שקשורות לעסק <br /> <br />\r\n              2: אחרי בחירת תמונה התמונה עולה ישר וכשמסתיימת העלאה של התמונה\r\n              מתקבלת הודעה שהתמונה עלתה <br />\r\n              3: <b>חובה </b> אחרי שהתמונה עלתה ללחוץ על כפתור של <br />{\" \"}\r\n              <i> העלה תמונה חדשה</i>\r\n            </p>\r\n          </div>\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInputFile(\r\n                  \"bizImage\",\r\n                  \"העלאת תמונות חדשות \",\r\n                  \"file\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInputFile(\r\n                  \"bizImageDefault\",\r\n                  \"העלאת תמונה קבועה חדשה \",\r\n                  \"file\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInputFile(\r\n                  \"bizImageWeek\",\r\n                  \"העלאת תמונה שבועית חדשה \",\r\n                  \"file\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 mt-3 \">\r\n                {this.renderButtonImg(\"העלה תמונות חדשות \")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCardImg;\r\n","import React from \"react\";\r\nimport { Form } from \"../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\n\r\n/***\r\n * \"newCard\" component\r\n */\r\nclass NewCard extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      bizName: \"\",\r\n      bizCategory: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: [],\r\n      bizImageDefault: [],\r\n      bizImageWeek: [],\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    bizName: Joi.string().required(),\r\n    bizCategory: Joi.string().required(),\r\n    bizDescription: Joi.string().required(),\r\n    bizAddress: Joi.string().required(),\r\n    bizPhone: Joi.string().required(),\r\n    bizImage: Joi.array(),\r\n    bizImageDefault: Joi.array(),\r\n    bizImageWeek: Joi.array(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors \r\n   * the function will run the \"newCard\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData } = this.state;\r\n    const data1 = {\r\n      ...formData,\r\n      bizImageDefault: [\r\n        'upload\\\\2021-03-03T07-01-43.744Z-business-card-1019952_1920 (1).jpg',\r\n      ],\r\n    };\r\n    try {\r\n      const data2 = await cardServices.newCard(data1);\r\n      window.location = `/card/${data2._id}/edit-img`;\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ formData: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"row pb-5 rounded text-dark cardBackground\"\r\n        >\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizName\", \"שם העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderSelect(\r\n                  \"bizCategory\",\r\n                  \"קטגורית העסק\",\r\n                  this.props.categories\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizAddress\", \"כתובת העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizPhone\", \"מס' טלפון של העסק\", \"tel\")}\r\n              </div>\r\n              <div className=\"col-12 \">\r\n                {this.renderTextTara(\"bizDescription\", 3, \"תיאור העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 mt-3 \">\r\n                {this.renderButton(\"צור כרטיס חדש \")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCard;\r\n","import http from \"./httpService\";\r\n\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * the function send to the server request to get all categories\r\n */\r\nexport const getCategories = async () => {\r\n  const { data } = await http.get(`${apiUrl}/categories`);\r\n  return data;\r\n};\r\n\r\n/**\r\n * the function send to the server response to create new category\r\n * the function getting 1 parameter \r\n * 1 the category data\r\n */\r\nexport const newCategory = async (formData) => {\r\n  const { data } = await http.post(\r\n    `${apiUrl}/categories/new-category/`,\r\n    formData\r\n  );\r\n  return data;\r\n};\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst categoryService = {\r\n  getCategories,\r\n  newCategory,\r\n};\r\n\r\nexport default categoryService;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Form } from \"../common/forms\";\r\nimport categoryService from \"../common/services/categoryService\";\r\nimport \"./category.css\";\r\n\r\n/***\r\n * \"newCategory\" component\r\n */\r\nclass NewCategory extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      categoryName: \"\",\r\n      image: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    categoryName: Joi.string(),\r\n    image: Joi.string(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"newCard\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData } = this.state;\r\n    try {\r\n      await categoryService.newCategory(formData);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ formData: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row pb-5 rounded categoryBackground \">\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"categoryName\", \"categoryName\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"image\", \"image\")}\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-12 col-lg-8 \">\r\n                {this.renderButton(\"create new category\")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCategory;\r\n","import React, { Component } from \"react\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport favoritesService from \"../common/services/favoritesService\";\r\nimport Card from \"./card\";\r\n\r\n/***\r\n * \"myFavorite\" component\r\n * this component shows the favorites card\r\n */\r\nclass MyFavorite extends Component {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    favorites: [],\r\n  };\r\n\r\n  /***\r\n   * the function send to the server request to get all favorites cards\r\n   * if is exist favorites card will send new request of every single card end add to the state\r\n   */\r\n  async componentDidMount() {\r\n    const myFavorite = await favoritesService.getAllFavorites();\r\n    const favorites = [];\r\n    if (myFavorite) {\r\n      for (const favorite of myFavorite) {\r\n        const data = await cardServices.getCard(favorite.of_card);\r\n        favorites.push(data);\r\n      }\r\n      this.setState({ favorites: favorites });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    const { favorites } = this.state;\r\n    return (\r\n      <>\r\n        {favorites &&\r\n          favorites.map((favoriteCard) => (\r\n            <Card\r\n              key={favoriteCard._id}\r\n              card={favoriteCard}\r\n              id={this.props.id}\r\n            />\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyFavorite;\r\n","import { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ProtectedRoute from \"./common/prodecectdRoute\";\nimport cardServices from \"./common/services/cardsServices\";\nimport userService from \"./common/services/userService\";\nimport {\n  Login,\n  LogOut,\n  SignUp,\n  SignUpBusiness,\n  SignUpManager,\n} from \"./components/auth\";\nimport CardId from \"./components/cardId\";\nimport Category from \"./components/category\";\nimport CategoryId from \"./components/categoryId\";\nimport {\n  ManagerDashboard,\n  NavBar,\n  BusinessDashboard,\n} from \"./components/dashboard\";\nimport EditCard from \"./components/editCard\";\nimport EditCardImg from \"./components/editCardImg\";\nimport NewCard from \"./components/newCard\";\nimport NewCategory from \"./components/newCategory\";\nimport categoryService from \"./common/services/categoryService\";\nimport MyFavorite from \"./components/myFavorite\";\n\n/***\n * \"app\" component\n */\nclass App extends Component {\n  /***\n   * the state of the component\n   */\n  state = {\n    user: \"\",\n    cards: {},\n    categories: [],\n    allCardsPerCategory: [],\n    exactCategory: \"\",\n  };\n\n  /***\n   * on component started this function will run\n   * this function check if the user is logged end send request to server to get the cards and the categories\n   * after this the state will be updated\n   */\n  async componentDidMount() {\n    const user = userService.getCurrentUser();\n    this.setState({ user });\n    const categories = await categoryService.getCategories();\n    const cards = await cardServices.getCards();\n    this.setState({ cards, categories });\n  }\n\n\n  /***\n   * the render of jsx\n   */\n  render() {\n    const { user, categories, cards } = this.state;\n    return (\n      <>\n      {/** this is the header of te app */}\n        <header className=\"container-fluid p-0\">\n          <NavBar\n            user={user}\n            categories={categories}\n            cards={cards}\n          />\n          {/** check if the user type of manager or business */}\n          {user?.manager && <ManagerDashboard />}\n          {user?.business && <BusinessDashboard />}\n        </header>\n        <main className=\"container-fluid min-vh-100 bg-dark text-white p-0 pt-4\">\n          <ToastContainer />\n\n            {/** all routing in the function */}\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <Category {...props} allCategories={categories} />\n              )}\n            />\n            <ProtectedRoute\n              path=\"/new-card\"\n              render={(props) => <NewCard {...props} categories={categories} />}\n            />\n            <ProtectedRoute path=\"/new-category\" component={NewCategory} />\n            <Route\n              path=\"/category/:id\"\n              render={(props) => (\n                <CategoryId\n                  {...props}\n                  id={user?._id}\n                  allCards={cards}\n                  allCategories={categories}\n                />\n              )}\n            />\n            <Route\n              path=\"/card/:id\"\n              exact\n              render={(props) => (\n                <CardId {...props} id={user?._id} cards={cards} />\n              )}\n            />\n            <Route\n              path=\"/card/:id/edit\"\n              exact\n              render={(props) => (\n                <EditCard {...props} categories={categories} />\n              )}\n            />\n            <Route\n              path=\"/card/:id/edit-img\"\n              exact\n              render={(props) => <EditCardImg {...props} />}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route\n              path=\"/myFavorite\"\n              render={(props) => <MyFavorite {...props} id={user?._id} />}\n            />\n            <Route path=\"/logout\" component={LogOut} />\n            <Route path=\"/sign-up-user\" component={SignUp} />\n            <Route path=\"/sign-up-business\" component={SignUpBusiness} />\n            <Route path=\"/sign-up-manager\" component={SignUpManager} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n        {/** the footer of the app */}\n        <footer className=\"container-fluid bg-dark p-3\"></footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"jquery/dist/jquery\";\nimport \"popper.js/dist/popper\";\nimport \"bootstrap/dist/js/bootstrap\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}