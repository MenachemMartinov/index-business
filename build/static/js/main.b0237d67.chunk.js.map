{"version":3,"sources":["common/services/httpService.js","common/services/userService.js","common/prodecectdRoute.jsx","common/services/cardsServices.js","common/forms/input.jsx","common/forms/textTara.jsx","common/forms/select.jsx","common/services/filesServies.js","common/forms/form.jsx","components/auth/login.jsx","components/auth/logOut.jsx","components/auth/signUp.jsx","components/auth/signUpBusiness.jsx","components/auth/signUpManager.jsx","common/services/favoritesService.js","components/cardId.jsx","components/category.jsx","common/services/categoryService.js","components/card.jsx","components/categoryId.jsx","components/dashboard/navBar.jsx","components/dashboard/manager.jsx","components/dashboard/business.jsx","components/editCard.jsx","components/editCardImg.jsx","components/newCard.jsx","components/newCategory.jsx","components/myFavorite.jsx","components/editCategory.js","App.jsx","reportWebVitals.js","index.js"],"names":["axios","interceptors","request","use","config","tokenHeaders","localStorage","getItem","headers","common","response","error","status","toast","Promise","reject","http","get","post","put","patch","delete","tokenKay","email","password","a","apiUrl","data","setItem","token","formData","userService","login","signUp","getCurrentUser","jwt","JWT","jwtDecode","user","business","manager","err","logOut","removeItem","getJWT","ProtectedRoute","Component","component","render","biz","rest","currentUser","props","to","pathname","state","from","location","cardData","id","cardServices","getCards","getCard","newCard","updateCard","updateCardImage","deleteCard","Input","name","label","className","htmlFor","type","TextTara","rows","placeholder","Select","value","option","defaultValue","disabled","map","categoryName","_id","NewImgUpload","file","Form","handelSubmit","e","preventDefault","errors","validate","setState","doSubmit","schema","Joi","abortEarly","details","path","message","handelChange","target","errorsCopy","errorsMessage","validateProperty","updateFormData","handelChangeFile","files","console","log","length","sendFile","FormData","append","push","rode","success","renderInput","onChange","renderInputFile","renderSelect","this","obj","LogIn","string","required","min","UserService","window","onSubmit","noValidate","renderButton","LogOut","SignUp","body","history","replace","SignUpBusiness","SignUpManger","favoritesService","newFavorites","ifExistFavorites","getAllFavorites","deleteFavorites","CardId","card","bizAddress","bizCategory","bizDescription","bizImage","bizImageDefault","bizImageWeek","bizName","bizPhone","favoriteIsExist","favorites","componentDidMount","match","params","user_id","src","imgUrl","alt","href","onClick","Category","allCategories","category","image","categoryService","getCategories","newCategory","updateCategory","deleteCategories","Card","useState","favoritesExist","setFavoritesExist","CategoryId","allCards","filter","cardsPerCategory","NavBar","categories","cards","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","item","Search","filterOfSearch","split","cardsFind","some","toLowerCase","includes","filterCards","ManagerDashboard","BusinessDashboard","EditCard","array","renderTextTara","EditCardImg","dark","renderButtonImg","NewCard","data1","data2","NewCategory","MyFavorite","myFavorite","favorite","of_card","favoriteCard","EditCategory","App","allCardsPerCategory","exactCategory","exact","Login","SignUpManager","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0237d67.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * to add the token to the headers request\r\n */\r\naxios.interceptors.request.use((config) => {\r\n  const tokenHeaders = localStorage.getItem(\"token\");\r\n  config.headers.common[\"auth-token\"] = tokenHeaders;\r\n  return config;\r\n});\r\n\r\n/**\r\n * to intercept the errors\r\n */\r\naxios.interceptors.response.use(null, (error) => {\r\n  if (error.response && error.response.status >= 403) {\r\n    toast.error(\"שגיאה לא צפויה \");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\n/**\r\n * to use easier with axios create new object what export the axios deferent option \r\n */\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst tokenKay = \"token\";\r\n\r\n/**\r\n * the function get the token from the localStorage\r\n */\r\nexport function getJWT() {\r\n  return localStorage.getItem(tokenKay);\r\n}\r\n\r\n/**\r\n * the function clear the token from the localStorage\r\n */\r\nexport function logOut() {\r\n  localStorage.removeItem(tokenKay);\r\n  toast(\"התנתקת בהצלחה\");\r\n}\r\n\r\n/**\r\n * the function check if the token is kind of the system\r\n */\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKay);\r\n    const JWT = jwtDecode(jwt);\r\n    if (JWT?.user || JWT?.business || JWT?.manager) {\r\n      return JWT;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * the function send to the server request to login\r\n * the function getting 2 parameters\r\n * 1 the email\r\n * 2 the password\r\n * the function save in the localStorage\r\n */\r\nexport async function login(email, password) {\r\n  const { data } = await http.post(`${apiUrl}/auth`, { email, password });\r\n  localStorage.setItem(tokenKay, data.token);\r\n}\r\n\r\n/**\r\n * the function send to the server request to subscribe to the site\r\n * the function getting 1 parameter\r\n * 1 the form data\r\n */\r\nexport async function signUp(formData) {\r\n  const { data } = await http.post(`${apiUrl}/users/new-user`, formData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst userService = {\r\n  login,\r\n  signUp,\r\n  getCurrentUser,\r\n  logOut,\r\n  getJWT,\r\n};\r\n\r\nexport default userService;\r\n","import userService from \"./services/userService\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n/**\r\n * the component check if the user has been logged\r\n * if the user is logged the component will return the (component or render) what gibeon \r\n */\r\nconst ProtectedRoute = ({ component: Component, render, biz, ...rest }) => {\r\n  const currentUser = userService.getCurrentUser();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!currentUser || (biz && !currentUser.biz)) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/sign-in\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * the function send to the server request to all cards\r\n */\r\nexport async function getCards() {\r\n  const { data } = await http.get(`${apiUrl}/cards/all-cards`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to the create a new card\r\n * is getting 1 parameter\r\n * 1 the card data\r\n */\r\nexport async function newCard(cardData) {\r\n  const { data } = await http.post(`${apiUrl}/cards/new-card`, cardData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to get card by id\r\n * the function getting 1 parameter\r\n * 1 the card id\r\n */\r\nexport async function getCard(id) {\r\n  const { data } = await http.get(`${apiUrl}/cards/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to update Card\r\n * the function getting 2 parameters\r\n * 1 the id of the card\r\n * 2 the card data\r\n */\r\nexport async function updateCard(id, cardData) {\r\n  const { data } = await http.put(`${apiUrl}/cards/${id}`, cardData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to update the image of the Card with gibeon id\r\n * the function getting 2 parameters\r\n * 1 the id of the card\r\n * 2 the card data (image)\r\n */\r\nexport async function updateCardImage(id, cardData) {\r\n  const { data } = await http.put(`${apiUrl}/cards/${id}/upload-img`, cardData);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send to the server request to remove card\r\n * the function getting 1 parameter\r\n * 1 the id of the card\r\n */\r\nexport async function deleteCard(id) {\r\n  const { data } = await http.delete(`${apiUrl}/cards/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst cardServices = {\r\n  getCards,\r\n  getCard,\r\n  newCard,\r\n  updateCard,\r\n  updateCardImage,\r\n  deleteCard,\r\n};\r\n\r\nexport default cardServices;\r\n","/**\r\n * input field component which receives 3 parameters\r\n * 1 the name of the field\r\n * 2 the label for the field\r\n * 3 span for errors by the field\r\n * 4 more option for select field\r\n */\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group text-center\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        {...rest}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n      />\r\n      {/*errors*/}\r\n      <span className=\"text-danger\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","/**\r\n * textTara field component which receives 3 parameters\r\n * 1 the name of the field\r\n * 2 the rows for the field\r\n * 3 the placeholder for the field\r\n * 4 more option for select field\r\n */\r\n\r\nconst TextTara = ({ name, rows, placeholder, ...rest }) => {\r\n  return (\r\n    <textarea\r\n      className=\"form-control\"\r\n      {...rest}\r\n      name={name}\r\n      rows={rows}\r\n      placeholder={placeholder}\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default TextTara;\r\n","/**\r\n * select field component which receives 5 parameters\r\n * 1 the name of the field\r\n * 2 the label for the field\r\n * 3 span for errors by the field\r\n * 4 the value of the field\r\n * 5 the option for the selected field\r\n * 6 more option for select field\r\n */\r\n\r\nconst Select = (props) => {\r\n  const { name, label, error, value, option, ...rest } = props;\r\n  return (\r\n    <div className=\"form-group text-center\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select\r\n        {...rest}\r\n        name={name}\r\n        id={name}\r\n        defaultValue={value}\r\n        className=\"form-control\"\r\n      >\r\n        <option value=\"\" disabled>\r\n          {label}\r\n        </option>\r\n\r\n        {option.map((option) => (\r\n          <option key={option._id} value={option.categoryName}>\r\n            {option.categoryName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <span className=\"text-danger\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * the function send request to the server to upload new file\r\n * the function getting 1 parameter the\r\n * 1 the selected file\r\n * the function return the path to the upload file\r\n */\r\nexport function NewImgUpload(file) {\r\n  const  data  = http.post(`${apiUrl}/files/new-file`, file, {\r\n    headers: {\r\n      \"Content-Type\":\r\n        \"multipart/form-data; boundary=<calculated when request is sent>\",\r\n    },\r\n  });\r\n  return data;\r\n}\r\n","/**\r\n * all import for the file\r\n */\r\nimport Joi from \"joi-browser\";\r\nimport React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport TextTara from \"./textTara\";\r\nimport Select from \"./select\";\r\nimport cardServices from \"../services/cardsServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport { NewImgUpload } from \"../services/filesServies\";\r\n\r\nclass Form extends Component {\r\n  /**\r\n   * the function what run on submit the parameter is event\r\n   * the function check if exist a error\r\n   * if a error is exist the \"setState.errors\" cangue with the new error\r\n   * if not exist a error the \"doSubmit\" function run\r\n   */\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (!errors) {\r\n      this.doSubmit();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the function check if exist a error in one field\r\n   * if a error is exist the \"setState.errors\" cangue with the new error\r\n   * if error not exist will return null\r\n   */\r\n  validateProperty(name, value) {\r\n    const schema = { [name]: this.schema[name] };\r\n    const obj = { [name]: value };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  }\r\n\r\n  /**\r\n   * the function check if exist a error in all fields\r\n   */\r\n  validate = () => {\r\n    const {\r\n      state: { formData },\r\n      schema,\r\n    } = this;\r\n\r\n    const { error } = Joi.validate(formData, schema, {\r\n      abortEarly: false,\r\n    });\r\n    if (!error) {\r\n      return null;\r\n    }\r\n    const errors = {};\r\n    for (const { path, message } of error.details) {\r\n      errors[path[0]] = message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  /**\r\n   * the function is following on cangues on the form fields\r\n   */\r\n  handelChange = ({ target: { value, name } }) => {\r\n    const { errors, formData } = this.state;\r\n\r\n    // validate input\r\n    const errorsCopy = { ...errors } || {};\r\n    const errorsMessage = this.validateProperty(name, value);\r\n\r\n    if (errorsMessage) {\r\n      errorsCopy[name] = errorsMessage;\r\n    } else {\r\n      delete errorsCopy[name];\r\n    }\r\n\r\n    // validate form\r\n    const updateFormData = { ...formData };\r\n    updateFormData[name] = value;\r\n    // update state\r\n    this.setState({ formData: updateFormData, errors: errorsCopy });\r\n  };\r\n\r\n  \r\n  /**\r\n   * the function is following on cangues on the form files field\r\n   */\r\n  handelChangeFile = async ({ target: { files, name } }) => {\r\n    console.log(files);\r\n    if (!files.length) {\r\n      console.log(\"1\");\r\n      toast(\"לא בחרת קובץ \");\r\n      return;\r\n    }\r\n    const { formData } = this.state;\r\n    console.log(\"2\");\r\n\r\n    const sendFile = new FormData();\r\n    sendFile.append(\"file\", files[0], files[0].name);\r\n    try {\r\n      const value = await NewImgUpload(sendFile);\r\n      console.log(value);\r\n      // validate form\r\n      const updateFormData = { ...formData };\r\n      updateFormData[name].push(value?.data?.path);\r\n      // update state\r\n      this.setState({ formData: updateFormData });\r\n      if (value?.data?.path) {\r\n        this.setState({ rode: true });\r\n        toast.success(\"התמונה עלתה\");\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  /** \r\n   * the function render the input component\r\n   * the function getting 3 parameters\r\n   * 1 the name of the field\r\n   * 2 the label for the field\r\n   * 3 the type of the field the basic type is \"text\"\r\n   * \r\n   */\r\n  renderInput = (name, label, type = \"text\", ...rest) => {\r\n    const { formData, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        value={formData[name]}\r\n        onChange={this.handelChange}\r\n        error={errors && errors[name]}\r\n        name={name}\r\n        label={label}\r\n        {...rest}\r\n      />\r\n    );\r\n  };\r\n\r\n  /** \r\n   * the function render the input component\r\n   * the function getting 3 parameters\r\n   * 1 the name of the field\r\n   * 2 the label for the field\r\n   * 3 the type of the field the basic type is \"file\"\r\n   * the deferent between the \"renderInput\" is the function that run onChange\r\n   */\r\n  renderInputFile = (name, label, type = \"file\", ...rest) => {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        onChange={this.handelChangeFile}\r\n        error={errors && errors[name]}\r\n        name={name}\r\n        label={label}\r\n        {...rest}\r\n      />\r\n    );\r\n  };\r\n\r\n  /** \r\n   * the function render the select component\r\n   * the function getting 3 parameters \r\n   * 1 the name of the field\r\n   * 2 the label for the field\r\n   * 3 the option for the select field (array)\r\n   */\r\n  renderSelect = (name, label, option = []) => {\r\n    const { formData, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        onChange={this.handelChange}\r\n        value={formData[name]}\r\n        error={errors[name]}\r\n        option={option}\r\n      ></Select>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * the function render the textTara component\r\n   * the function getting 3 parameters \r\n   * 1 the name of the field\r\n   * 2 the rows of the field\r\n   * 3 the placeholder for the field\r\n   */\r\n  renderTextTara(name, rows, placeholder) {\r\n    const { formData, errors } = this.state;\r\n    return (\r\n      <TextTara\r\n        name={name}\r\n        rows={rows}\r\n        placeholder={placeholder}\r\n        onChange={this.handelChange}\r\n        value={formData[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * the function render the forms button \r\n   * the function getting 1 parameter\r\n   * 1 the label of the button\r\n   */\r\n  renderButton(label = \"\") {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-block btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  \r\n  /**\r\n   * the function render the forms button in a form of send files\r\n   * the function getting 1 parameter\r\n   * 1 the label of the button\r\n   */\r\n  renderButtonImg(label = \"\") {\r\n    return (\r\n      <button disabled={!this.state.rode} className=\"btn btn-block btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Form } from \"../../common/forms\";\r\nimport UserService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n/**\r\n * class component for login\r\n */\r\nclass LogIn extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors \r\n   * the function will run the \"login\" function from the \"userService\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { email, password } = this.state.formData;\r\n\r\n    try {\r\n      await UserService.login(email, password);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h3>התחברות לאתר </h3>\r\n          </div>\r\n          <div className=\"col-lg-6 \">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign In !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import UserService from \"../../common/services/userService\";\r\n\r\n/***\r\n * the component run the \"logOut\" function from \"userService\"\r\n */\r\nconst LogOut = () => {\r\n  UserService.logOut();\r\n  window.location = \"/\";\r\n\r\n  return null;\r\n};\r\n\r\nexport default LogOut;\r\n","import React from \"react\";\r\nimport { Form } from \"../../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n/***\r\n * the subscribe component\r\n * the component will typeof class\r\n */\r\nclass SignUp extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      password: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n    name: Joi.string().required().min(2).label(\"Name\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"signUp\" function from the \"userService\" end catch the errors\r\n   * end the reload the page to \"/login\"\r\n   */\r\n  async doSubmit() {\r\n    const body = { ...this.state.formData, user: true };\r\n\r\n    try {\r\n      await userService.signUp(body);\r\n      toast.success(\"המשתמש נוצר\");\r\n      this.props.history.replace(\"/login\");\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: \"error email is exit\" } });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h2>הרשמה למשתמשים</h2>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign Up !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Form } from \"../../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n/***\r\n * the subscribe component\r\n * this component is subscribe for business\r\n * the component will typeof class\r\n */\r\nclass SignUpBusiness extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      password: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n    name: Joi.string().required().min(2).label(\"Name\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"signUp\" function from the \"userService\" end catch the errors\r\n   * end the reload the page to \"/login\"\r\n   */\r\n  async doSubmit() {\r\n    const body = { ...this.state.formData, business: true };\r\n\r\n    try {\r\n      await userService.signUp(body);\r\n      toast.success(\"המשתמש נוצר\");\r\n      this.props.history.replace(\"/login\");\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: \"error email is exit\" } });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h2>הרשמה לבעלי עסקים </h2>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign Up !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpBusiness;\r\n","import React from \"react\";\r\nimport { Form } from \"../../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../common/services/userService\";\r\nimport \"../form.css\";\r\n\r\n\r\n/***\r\n * the subscribe component\r\n * the component will typeof class\r\n */\r\nclass SignUpManger extends Form {\r\n  /**\r\n   * the state of the component\r\n   * the state is like local DB\r\n   */\r\n  state = {\r\n    formData: {\r\n      password: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n    name: Joi.string().required().min(2).label(\"Name\"),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"signUp\" function from the \"userService\" end catch the errors\r\n   * end the reload the page to \"/login\"\r\n   */\r\n  async doSubmit() {\r\n    const body = { ...this.state.formData, manager: true };\r\n\r\n    try {\r\n      await userService.signUp(body);\r\n      toast.success(\"המשתמש נוצר\");\r\n      this.props.history.replace(\"/login\");\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ errors: { email: \"error email is exit\" } });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 text-center\">\r\n            <h2>הרשמה למנהלים </h2>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handelSubmit} noValidate>\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign Up !!!\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpManger;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * the function send request to the server to save new favorite\r\n * the function getting 1 parameter\r\n * 1 the id of the favorite card\r\n */\r\nexport async function newFavorites(id) {\r\n  const { data } = await http.post(\r\n    `${apiUrl}/favorites/${id}/new-favorites`,\r\n    null\r\n  );\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send request to the server to check if the card is favorite\r\n * the function getting 1 parameter\r\n * 1 the id of the card\r\n */\r\nexport async function ifExistFavorites(id) {\r\n  const { data } = await http.get(`${apiUrl}/favorites/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send request to the server to delete the card from the favorites cards list\r\n * the function getting 1 parameter\r\n * 1 the id of the card to delete from the favorites cards list\r\n */\r\nexport async function deleteFavorites(id) {\r\n  const { data } = await http.delete(`${apiUrl}/favorites/${id}`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * the function send request to the server to get the list of all favorites cards\r\n */\r\nexport async function getAllFavorites() {\r\n  const { data } = await http.get(`${apiUrl}/favorites/all-favorites`);\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst favoritesService = {\r\n  newFavorites,\r\n  ifExistFavorites,\r\n  getAllFavorites,\r\n  deleteFavorites,\r\n};\r\n\r\nexport default favoritesService;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport favoritesService from \"../common/services/favoritesService\";\r\nimport { imgUrl } from \"../common/config.json\";\r\n\r\nimport \"./card.css\";\r\n\r\n/***\r\n * cardId component\r\n */\r\nclass CardId extends Component {\r\n  /***\r\n   * the state of the \"cardId\"\r\n   */\r\n\r\n  state = {\r\n    card: {\r\n      _id: \"\",\r\n      bizAddress: \"\",\r\n      bizCategory: \"\",\r\n      bizDescription: \"\",\r\n      bizImage: [],\r\n      bizImageDefault: \"\",\r\n      bizImageWeek: \"\",\r\n      bizName: \"\",\r\n      bizPhone: \"\",\r\n    },\r\n    favoriteIsExist: false,\r\n  };\r\n\r\n  /***\r\n   * the favorites function check if the card is favorite\r\n   * if is true the favorites state changes to false\r\n   * if is false the favorites state changes to true\r\n   */\r\n  favorites = async () => {\r\n    const exist = await favoritesService.ifExistFavorites(this.state.card._id);\r\n    if (exist.length > 0) {\r\n      this.setState({ favoriteIsExist: true });\r\n    } else {\r\n      this.setState({ favoriteIsExist: false });\r\n    }\r\n  };\r\n\r\n  /***\r\n   * the function run after started the component\r\n   * the function run the function to get the exact card by id end the function run the \"favorites\" function\r\n   */\r\n  componentDidMount = async () => {\r\n    const data = await cardServices.getCard(this.props.match.params.id);\r\n    this.setState({\r\n      card: data,\r\n    });\r\n    this.favorites();\r\n  };\r\n\r\n  /***\r\n   * render the jsx\r\n   */\r\n  render() {\r\n    const {\r\n      _id,\r\n      bizCategory,\r\n      bizDescription,\r\n      bizImageDefault,\r\n      bizImageWeek,\r\n      bizName,\r\n      bizPhone,\r\n      user_id,\r\n    } = this.state.card;\r\n    return (\r\n      <div className=\"col-12 m-0 mt-4 p-0 \">\r\n        <div className=\"container\">\r\n          <div className=\"row p-1 no-gutters text-center rounded cardHeight cardBackground\">\r\n            <div className=\"col-12 \">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <img\r\n                    src={`${imgUrl}/${\r\n                      bizImageDefault[bizImageDefault.length - 1]\r\n                    }`}\r\n                    className=\"card-img inline cardImg\"\r\n                    alt={`bizImageDefault of:${bizName} of: ${bizCategory}`}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4\">\r\n                  <img\r\n                    src={`${imgUrl}/${bizImageWeek[bizImageWeek.length - 1]}`}\r\n                    className=\"card-img inline cardImg\"\r\n                    alt={`bizImageWeek of:${bizName} of: ${bizCategory}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 \">\r\n              <div className=\"row justify-content-md-center p-2\">\r\n                <div className=\"col-12 \">\r\n                  <h4>{bizName}</h4>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                  <a\r\n                    href={`tel:${bizPhone}`}\r\n                    className=\"btn btn-success btn-block\"\r\n                  >\r\n                    {bizPhone}\r\n                  </a>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                  <Link\r\n                    className=\"btn btn-dark btn-block\"\r\n                    to={`/category/${bizCategory}`}\r\n                  >\r\n                    קטגוריה: {bizCategory}\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-12 text-center pt-4 p-1 cardLinks\">\r\n                  <p className=\" bg-primary m-3\">\r\n                    מידע נוסף על העסק:\r\n                    <br /> {bizDescription}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-12 \"></div>\r\n                {/** if this card created by the user wes logged*/}\r\n                {user_id === this.props.id && (\r\n                  <>\r\n                    <div className=\"col-12 \"></div>\r\n                    <div className=\"col-6 pt-4\">\r\n                      <Link\r\n                        className=\"btn btn-dark btn-sm\"\r\n                        to={`/card/${_id}/edit`}\r\n                      >\r\n                        עריכת כרטיס\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"col-6 pt-4 \">\r\n                      <Link\r\n                        className=\"btn btn-danger btn-sm\"\r\n                        onClick={() => cardServices.deleteCard(_id)}\r\n                        to=\"/\"\r\n                      >\r\n                        מחיקת כרטיס\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                {/** if this card is not favorite*/}\r\n                {this.props.id && !this.state.favoriteIsExist && (\r\n                  <button\r\n                    className=\"btn btn-success btn-block m-3\"\r\n                    onClick={async () => {\r\n                      const res = await favoritesService.newFavorites(_id);\r\n                      if (res) {\r\n                        this.setState({ favoriteIsExist: true });\r\n                      }\r\n                    }}\r\n                  >\r\n                    הוספה למעודפים\r\n                  </button>\r\n                )}\r\n                {/** if this card is favorite*/}\r\n                {this.props.id && this.state.favoriteIsExist && (\r\n                  <button\r\n                    className=\"btn btn-success btn-block m-3\"\r\n                    onClick={async () => {\r\n                      const res = await favoritesService.deleteFavorites(_id);\r\n                      if (res) {\r\n                        this.favorites();\r\n                      }\r\n                    }}\r\n                  >\r\n                    הסרה מהמעודפים\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardId;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport \"./category.css\";\r\n\r\n/***\r\n * the category component getting 1 parameter\r\n * 1 all Categories\r\n */\r\nconst Category = ({ allCategories }) => {\r\n  return (\r\n    <div className=\"row m-0 p-0 pt-4 pb-3\">\r\n      {/** check if all categories is exist*/}\r\n      {allCategories?.length > 0 &&\r\n        allCategories.map((category) => {\r\n          return (\r\n            <div\r\n              key={category.categoryName}\r\n              className=\"col-12 col-md-6 col-lg-4 pt-4\"\r\n            >\r\n              <div className=\"container \">\r\n                <div className=\"row justify-content-md-center\">\r\n                  <div className=\"col-12 alignItemsCenter\">\r\n                    <img\r\n                      className=\"cord-img-top inline cardImg \"\r\n                      src={category.image}\r\n                      alt={`category-${category.categoryName}`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <Link\r\n                      to={`/category/${category.categoryName}`}\r\n                      className=\"btn btn-dark btn-block btn-lg\"\r\n                    >\r\n                      {category.categoryName}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import http from \"./httpService\";\r\n\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * the function send to the server request to get all categories\r\n */\r\nexport const getCategories = async () => {\r\n  const { data } = await http.get(`${apiUrl}/categories`);\r\n  return data;\r\n};\r\n\r\n/**\r\n * the function send to the server response to create new category\r\n * the function getting 1 parameter\r\n * 1 the category data\r\n */\r\nexport const newCategory = async (formData) => {\r\n  const { data } = await http.post(\r\n    `${apiUrl}/categories/new-category/`,\r\n    formData\r\n  );\r\n  return data;\r\n};\r\n\r\n/**\r\n * the function send to the server response to update category\r\n * the function getting 2 parameters\r\n * 1 the category data\r\n * 2 the category id\r\n */\r\nexport const updateCategory = async (id, formData) => {\r\n  const { data } = await http.put(`${apiUrl}/categories/${id}`, formData);\r\n  return data;\r\n};\r\n\r\n/**\r\n * the function send to the server request to delete category\r\n */\r\nexport const deleteCategories = async (id) => {\r\n  const { data } = await http.delete(`${apiUrl}/categories/${id}`);\r\n  return data;\r\n};\r\n\r\n/**\r\n * object to export all function\r\n */\r\nconst categoryService = {\r\n  getCategories,\r\n  newCategory,\r\n  updateCategory,\r\n  deleteCategories,\r\n};\r\n\r\nexport default categoryService;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport \"./card.css\";\r\nimport { imgUrl } from \"../common/config.json\";\r\nimport favoritesService from \"../common/services/favoritesService\";\r\n\r\n/***\r\n * the card component getting 2 parameters\r\n * 1 the card object\r\n * 2 the user id to check if the card has been created by the same user\r\n */\r\nconst Card = ({\r\n  card: { _id, bizCategory, bizImageDefault, bizName, bizPhone, user_id },\r\n  id,\r\n}) => {\r\n  /***\r\n   * the state for favorites\r\n   * this started with false\r\n   */\r\n  const [favoritesExist, setFavoritesExist] = useState(false);\r\n\r\n  /***\r\n   * the favorites function check if the card is favorite\r\n   * if is true the favorites state changes to false\r\n   * if is false the favorites state changes to true\r\n   */\r\n  const favorites = async () => {\r\n    const exist = await favoritesService.ifExistFavorites(_id);\r\n    if (exist.length > 0) {\r\n      setFavoritesExist(true);\r\n    } else {\r\n      setFavoritesExist(false);\r\n    }\r\n  };\r\n  /***\r\n   * run the favorites function\r\n   */\r\n  favorites();\r\n\r\n  /***\r\n   * render the jsx\r\n   */\r\n  return (\r\n    <div className=\"col-12 m-0 mt-4 p-0  \">\r\n      <div className=\"container\">\r\n        <div className=\"row p-1 no-gutters text-center rounded  cardHeight cardBackground\">\r\n          <div className=\"col-12 col-md-5 col-lg-4 \">\r\n            <img\r\n              src={`${imgUrl}/${bizImageDefault[bizImageDefault.length - 1]}`}\r\n              className=\"card-img inline cardImg\"\r\n              alt={`bizCategory: ${bizCategory}`}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-7 col-lg-8\">\r\n            <div className=\"row justify-content-md-center p-2\">\r\n              <div className=\"col-12 \">\r\n                <h4>{bizName}</h4>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                <a\r\n                  href={`tel:${bizPhone}`}\r\n                  className=\"btn btn-success btn-block\"\r\n                >\r\n                  {bizPhone}\r\n                </a>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 cardLinks\">\r\n                <Link\r\n                  className=\"btn btn-dark btn-block\"\r\n                  to={`/category/${bizCategory}`}\r\n                >\r\n                  קטגוריה: {bizCategory}\r\n                </Link>\r\n              </div>\r\n              <div className=\"col-12 \"></div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 pt-4 \">\r\n                <Link className=\"btn btn-primary btn-block\" to={`/card/${_id}`}>\r\n                  למידע נוסף לחץ כאן\r\n                </Link>\r\n              </div>\r\n              {/** if this card created by the user wes logged*/}\r\n              {user_id === id && (\r\n                <>\r\n                  <div className=\"col-12 \"></div>\r\n                  <div className=\"col-6 pt-4\">\r\n                    <Link\r\n                      className=\"btn btn-dark btn-sm\"\r\n                      to={`/card/${_id}/edit`}\r\n                    >\r\n                      עריכת כרטיס\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-6 pt-4 \">\r\n                    <Link\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={() => cardServices.deleteCard(_id)}\r\n                      to=\"/\"\r\n                    >\r\n                      מחיקת כרטיס\r\n                    </Link>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/** if this card is not favorite*/}\r\n              {id && !favoritesExist && (\r\n                <button\r\n                  className=\"btn btn-success btn-block m-3\"\r\n                  onClick={async () => {\r\n                    const res = await favoritesService.newFavorites(_id);\r\n                    if (res) {\r\n                      setFavoritesExist(true);\r\n                    }\r\n                  }}\r\n                >\r\n                  הוספה למעודפים\r\n                </button>\r\n              )}\r\n              {/** if this card is favorite*/}\r\n              {id && favoritesExist && (\r\n                <button\r\n                  className=\"btn btn-success btn-block m-3\"\r\n                  onClick={async () => {\r\n                    const res = await favoritesService.deleteFavorites(_id);\r\n                    if (res) {\r\n                      favorites();\r\n                    }\r\n                  }}\r\n                >\r\n                  הסרה מהמעודפים\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Link } from \"react-router-dom\";\r\nimport categoryService from \"../common/services/categoryService\";\r\nimport Card from \"./card\";\r\n\r\n/***\r\n * the category component getting 4 parameter\r\n * 1 get the params.id\r\n * 2 get all cards\r\n * 3 get the all category\r\n * 4 get the user id\r\n */\r\nconst CategoryId = ({\r\n  match: { params },\r\n  allCards,\r\n  allCategories,\r\n  id,\r\n  manager,\r\n}) => {\r\n  if (allCategories) {\r\n    const category = allCategories.filter(\r\n      (category) => category.categoryName === params.id\r\n    );\r\n    console.log(category);\r\n    if (allCards) {\r\n      const cardsPerCategory = allCards.filter(\r\n        (card) => card.bizCategory === category[0].categoryName\r\n      );\r\n      console.log(cardsPerCategory);\r\n      return (\r\n        <>\r\n          {manager && (\r\n            <div>\r\n              <Link\r\n                className=\"btn btn-primary m-2\"\r\n                to={`/category/${category[0]._id}/edit`}\r\n              >\r\n                עריכת קטגוריה\r\n              </Link>\r\n              <button\r\n                className=\"btn btn-danger m-2\"\r\n                onClick={() => categoryService.deleteCategories()}\r\n              >\r\n                מחיקת קטגוריה{\" \"}\r\n              </button>\r\n            </div>\r\n          )}\r\n          {cardsPerCategory?.map((card) => (\r\n            <Card key={card._id} card={card} id={id} />\r\n          ))}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <h2>not found</h2>;\r\n};\r\n\r\nexport default CategoryId;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/***\r\n * the \"navBar\" component getting 3 parameters\r\n * 1 the user info and\r\n * 2 all categories\r\n * 3 the cards to can search\r\n */\r\nconst NavBar = ({ user, categories, cards }) => {\r\n  /***\r\n   * the state for the \"filterCards\" function\r\n   * is started with null\r\n   */\r\n  const [state, setState] = useState(null);\r\n  /***\r\n   * the function getting 1 parameter \"Search\"\r\n   * the function search end filter the all cards\r\n   */\r\n  const filterCards = (Search) => {\r\n    if (cards) {\r\n      if (Search.length > 0) {\r\n        let filterOfSearch = Search.split(\" \");\r\n\r\n        const cardsFind = cards.filter((card) =>\r\n          filterOfSearch.some((item) =>\r\n            card.bizName.toLowerCase().includes(item)\r\n          )\r\n        );\r\n        setState(cardsFind);\r\n      } else {\r\n        setState(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-1\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            אינדקס העסקים בביתר עילית\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarManager\"\r\n            aria-controls=\"navbarManager\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarManager\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active dropdown\">\r\n                <Link\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  to=\"#\"\r\n                  id=\"dropdown01\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"true\"\r\n                >\r\n                  תפריט ניוט באתר\r\n                </Link>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\r\n                  {categories?.length > 0 &&\r\n                    categories.map((item) => {\r\n                      return (\r\n                        <Link\r\n                          key={item._id}\r\n                          className=\"dropdown-item\"\r\n                          to={`/category/${item.categoryName}`}\r\n                        >\r\n                          {item.categoryName}\r\n                        </Link>\r\n                      );\r\n                    })}\r\n                  {/** if user is not logged*/}\r\n                  {!user && (\r\n                    <>\r\n                      <Link className=\"dropdown-item\" to=\"/login\">\r\n                        התחברות\r\n                      </Link>\r\n                      <Link className=\"dropdown-item\" to=\"/sign-up-business\">\r\n                        הרשמה לבעלי עסקים\r\n                      </Link>\r\n                      {/* <Link className=\"dropdown-item\" to=\"/sign-up-user\">\r\n                        הרשמה ללקוחות\r\n                      </Link>\r\n                      <Link className=\"dropdown-item\" to=\"/sign-up-manager\">\r\n                        הרשמה למנהלים\r\n                      </Link> */}\r\n                    </>\r\n                  )}\r\n                  {/** if user is logged*/}\r\n                  {user && (\r\n                    <>\r\n                      <Link className=\"dropdown-item\" to=\"/logout\">\r\n                        התנתקות\r\n                      </Link>\r\n                      <Link className=\"dropdown-item\" to=\"/myFavorite\">\r\n                        המעודפים שלי\r\n                      </Link>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form>\r\n              <input\r\n                type=\"search\"\r\n                name=\"searchCard\"\r\n                id=\"searchCard\"\r\n                className=\"form-control\"\r\n                placeholder=\"חיפוש לפי שם העסק\"\r\n                onChange={({ target: { value } }) => filterCards(value)}\r\n              />\r\n            </form>\r\n            {state?.length > 0 && (\r\n              <div className=\"dropdown-menu show ml-5\">\r\n                {state.map((item) => (\r\n                  <Link\r\n                    key={item._id}\r\n                    className=\" btn btn-md btn-block \"\r\n                    onClick={() => setState(null)}\r\n                    to={`/card/${item._id}`}\r\n                  >\r\n                    {item.bizName}\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n\r\n/***\r\n * the \"ManagerDashboard\" component \r\n * the component will return a seceded dashboard with the 2 button \r\n * 1 to go create a new business card.\r\n * 2 to create a new category\r\n */\r\nconst ManagerDashboard = () => {\r\n  return (\r\n    <div className=\"container-fluid bg-2 p-0 m-0\">\r\n      <Link className=\"btn btn-dark btn-sm m-0\" to=\"/new-card\">\r\n        כרטיס עסקים חדש\r\n      </Link>{\" \"}\r\n      <Link className=\"btn btn-dark btn-sm m-0\" to=\"/new-category\">\r\n        קטגוריה חדשה\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerDashboard;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n/***\r\n * the \"BusinessDashboard\" component \r\n * the component will return a seceded dashboard with the a button to go create a new business card.\r\n */\r\nconst BusinessDashboard = () => {\r\n  return (\r\n    <div className=\"container-fluid bg-2 p-0 m-0\">\r\n      <Link className=\"btn btn-dark btn-sm m-0\" to=\"/new-card\">\r\n        כרטיס עסקים חדש\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessDashboard;\r\n","import React from \"react\";\r\nimport { Form } from \"../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/***\r\n * \"editCard\" component\r\n */\r\nclass EditCard extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      bizName: \"\",\r\n      bizCategory: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: [],\r\n      bizImageDefault: \"\",\r\n      bizImageWeek: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    bizName: Joi.string().required(),\r\n    bizCategory: Joi.string().required(),\r\n    bizDescription: Joi.string().required(),\r\n    bizAddress: Joi.string().required(),\r\n    bizPhone: Joi.string().required(),\r\n    bizImage: Joi.array(),\r\n    bizImageDefault: Joi.string(),\r\n    bizImageWeek: Joi.string(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"newCard\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData } = this.state;\r\n    console.log(formData);\r\n    try {\r\n      await cardServices.newCard(formData);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ formData: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row \">\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizName\", \"שם העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderSelect(\r\n                  \"bizCategory\",\r\n                  \"קטגורית העסק\",\r\n                  this.props.categories\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizAddress\", \"כתובת העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizPhone\", \"מס' טלפון של העסק\", \"tel\")}\r\n              </div>\r\n              <div className=\"col-12 \">\r\n                {this.renderTextTara(\"bizDescription\", 3, \"תיאור העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 mt-3 \">\r\n                {this.renderButton(\"צור כרטיס חדש \")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className=\"col-12\">\r\n            <Link\r\n              className=\"btn btn-primary btn-md mt-4\"\r\n              to={`/card/${this.props.match.params.id}/edit-img`}\r\n            >\r\n              העלאת תמונות חדשות\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCard;\r\n","import React from \"react\";\r\nimport { Form } from \"../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/***\r\n * \"editCardImg\" component\r\n * this component is jest to upload new card images\r\n */\r\nclass EditCardImg extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      bizImage: [],\r\n      bizImageDefault: [],\r\n      bizImageWeek: [],\r\n    },\r\n    errors: {},\r\n    rode: false,\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    bizImage: Joi.array(),\r\n    bizImageDefault: Joi.array(),\r\n    bizImageWeek: Joi.array(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"updateCardImage\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData, rode } = this.state;\r\n    if (rode) {\r\n      const res = await cardServices.updateCardImage(\r\n        this.props.match.params.id,\r\n        formData\r\n      );\r\n      if (res._id === this.props.match.params.id) {\r\n        toast.success(\"הכרטיס עודכן\");\r\n        window.location = \"/\";\r\n      } else {\r\n        toast.error(\"הכרטיס לא עודכן\");\r\n      }\r\n    } else {\r\n      toast.dark(\"אין תמונות לעלאה \");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-12 col-md-8 col-lg-6 text-center\">\r\n            <h3> העלאת תמונות חדשות כללים </h3>\r\n            <p>\r\n              1: ישנם שלושה סוגי אפשרויות לעלאה של תמונה חדשה <br />\r\n              1.1: תמונה של הלוגו של החנות או תמונה של החנות <br />\r\n              2.1: תמונה של מבצעי השבוע <br />\r\n              3.1: תמונות אחרות שקשורות לעסק <br /> <br />\r\n              2: אחרי בחירת תמונה התמונה עולה ישר וכשמסתיימת העלאה של התמונה\r\n              מתקבלת הודעה שהתמונה עלתה <br />\r\n              3: <b>חובה </b> אחרי שהתמונה עלתה ללחוץ על כפתור של <br />{\" \"}\r\n              <i> העלה תמונה חדשה</i>\r\n            </p>\r\n          </div>\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInputFile(\r\n                  \"bizImage\",\r\n                  \"העלאת תמונות חדשות \",\r\n                  \"file\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInputFile(\r\n                  \"bizImageDefault\",\r\n                  \"העלאת תמונה קבועה חדשה \",\r\n                  \"file\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInputFile(\r\n                  \"bizImageWeek\",\r\n                  \"העלאת תמונה שבועית חדשה \",\r\n                  \"file\"\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 mt-3 \">\r\n                {this.renderButtonImg(\"העלה תמונות חדשות \")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCardImg;\r\n","import React from \"react\";\r\nimport { Form } from \"../common/forms\";\r\nimport Joi from \"joi-browser\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\n\r\n/***\r\n * \"newCard\" component\r\n */\r\nclass NewCard extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      bizName: \"\",\r\n      bizCategory: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: [],\r\n      bizImageDefault: [],\r\n      bizImageWeek: [],\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    bizName: Joi.string().required(),\r\n    bizCategory: Joi.string().required(),\r\n    bizDescription: Joi.string().required(),\r\n    bizAddress: Joi.string().required(),\r\n    bizPhone: Joi.string().required(),\r\n    bizImage: Joi.array(),\r\n    bizImageDefault: Joi.array(),\r\n    bizImageWeek: Joi.array(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors \r\n   * the function will run the \"newCard\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData } = this.state;\r\n    const data1 = {\r\n      ...formData,\r\n      bizImageDefault: [\r\n        'upload\\\\2021-03-03T07-01-43.744Z-business-card-1019952_1920 (1).jpg',\r\n      ],\r\n    };\r\n    try {\r\n      const data2 = await cardServices.newCard(data1);\r\n      window.location = `/card/${data2._id}/edit-img`;\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ formData: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"row pb-5 rounded text-dark cardBackground\"\r\n        >\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizName\", \"שם העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderSelect(\r\n                  \"bizCategory\",\r\n                  \"קטגורית העסק\",\r\n                  this.props.categories\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizAddress\", \"כתובת העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"bizPhone\", \"מס' טלפון של העסק\", \"tel\")}\r\n              </div>\r\n              <div className=\"col-12 \">\r\n                {this.renderTextTara(\"bizDescription\", 3, \"תיאור העסק\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4 mt-3 \">\r\n                {this.renderButton(\"צור כרטיס חדש \")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCard;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Form } from \"../common/forms\";\r\nimport categoryService from \"../common/services/categoryService\";\r\nimport \"./category.css\";\r\n\r\n/***\r\n * \"newCategory\" component\r\n */\r\nclass NewCategory extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      categoryName: \"\",\r\n      image: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    categoryName: Joi.string(),\r\n    image: Joi.string(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"newCard\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData } = this.state;\r\n    try {\r\n      await categoryService.newCategory(formData);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ formData: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row pb-5 rounded categoryBackground \">\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"categoryName\", \"categoryName\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"image\", \"image\")}\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-12 col-lg-8 \">\r\n                {this.renderButton(\"create new category\")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCategory;\r\n","import React, { Component } from \"react\";\r\nimport cardServices from \"../common/services/cardsServices\";\r\nimport favoritesService from \"../common/services/favoritesService\";\r\nimport Card from \"./card\";\r\n\r\n/***\r\n * \"myFavorite\" component\r\n * this component shows the favorites card\r\n */\r\nclass MyFavorite extends Component {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    favorites: [],\r\n  };\r\n\r\n  /***\r\n   * the function send to the server request to get all favorites cards\r\n   * if is exist favorites card will send new request of every single card end add to the state\r\n   */\r\n  async componentDidMount() {\r\n    const myFavorite = await favoritesService.getAllFavorites();\r\n    const favorites = [];\r\n    if (myFavorite) {\r\n      for (const favorite of myFavorite) {\r\n        const data = await cardServices.getCard(favorite.of_card);\r\n        favorites.push(data);\r\n      }\r\n      this.setState({ favorites: favorites });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    const { favorites } = this.state;\r\n    return (\r\n      <>\r\n        {favorites &&\r\n          favorites.map((favoriteCard) => (\r\n            <Card\r\n              key={favoriteCard._id}\r\n              card={favoriteCard}\r\n              id={this.props.id}\r\n            />\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyFavorite;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Form } from \"../common/forms\";\r\nimport categoryService from \"../common/services/categoryService\";\r\nimport \"./category.css\";\r\n\r\n/***\r\n * \"EditCategory\" component\r\n */\r\nclass EditCategory extends Form {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    formData: {\r\n      categoryName: \"\",\r\n      image: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  /**\r\n   * the schema is a object that is parameters getting validate function\r\n   */\r\n  schema = {\r\n    categoryName: Joi.string(),\r\n    image: Joi.string(),\r\n  };\r\n\r\n  /**\r\n   * the function that \"handelSubmit\" run if no errors\r\n   * the function will run the \"newCard\" function from the \"cardServices\" end catch the errors\r\n   */\r\n  doSubmit = async () => {\r\n    const { formData } = this.state;\r\n    console.log(this.props.match.params.id);\r\n    try {\r\n      const data = await categoryService.updateCategory(\r\n        this.props.match.params.id,\r\n        formData\r\n      );\r\n      console.log(data);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        this.setState({ formData: { email: err.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the render jsx of the component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row pb-5 rounded categoryBackground \">\r\n          <form onSubmit={this.handelSubmit} className=\"col-12 mt-5 \">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"categoryName\", \"categoryName\")}\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-4\">\r\n                {this.renderInput(\"image\", \"image\")}\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-12 col-lg-8 \">\r\n                {this.renderButton(\"create new category\")}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCategory;\r\n","import { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ProtectedRoute from \"./common/prodecectdRoute\";\r\nimport cardServices from \"./common/services/cardsServices\";\r\nimport userService from \"./common/services/userService\";\r\nimport {\r\n  Login,\r\n  LogOut,\r\n  SignUp,\r\n  SignUpBusiness,\r\n  SignUpManager,\r\n} from \"./components/auth\";\r\nimport CardId from \"./components/cardId\";\r\nimport Category from \"./components/category\";\r\nimport CategoryId from \"./components/categoryId\";\r\nimport {\r\n  ManagerDashboard,\r\n  NavBar,\r\n  BusinessDashboard,\r\n} from \"./components/dashboard\";\r\nimport EditCard from \"./components/editCard\";\r\nimport EditCardImg from \"./components/editCardImg\";\r\nimport NewCard from \"./components/newCard\";\r\nimport NewCategory from \"./components/newCategory\";\r\nimport categoryService from \"./common/services/categoryService\";\r\nimport MyFavorite from \"./components/myFavorite\";\r\nimport EditCategory from \"./components/editCategory\";\r\n\r\n/***\r\n * \"app\" component\r\n */\r\nclass App extends Component {\r\n  /***\r\n   * the state of the component\r\n   */\r\n  state = {\r\n    user: \"\",\r\n    cards: {},\r\n    categories: [],\r\n    allCardsPerCategory: [],\r\n    exactCategory: \"\",\r\n  };\r\n\r\n  /***\r\n   * on component started this function will run\r\n   * this function check if the user is logged end send request to server to get the cards and the categories\r\n   * after this the state will be updated\r\n   */\r\n  async componentDidMount() {\r\n    const user = userService.getCurrentUser();\r\n    this.setState({ user });\r\n    const categories = await categoryService.getCategories();\r\n    const cards = await cardServices.getCards();\r\n    this.setState({ cards, categories });\r\n  }\r\n\r\n  /***\r\n   * the render of jsx\r\n   */\r\n  render() {\r\n    const { user, categories, cards } = this.state;\r\n    return (\r\n      <>\r\n        {/** this is the header of te app */}\r\n        <header className=\"container-fluid p-0 fixed-top\">\r\n          <NavBar user={user} categories={categories} cards={cards} />\r\n          {/** check if the user type of manager or business */}\r\n          {user?.manager && <ManagerDashboard />}\r\n          {user?.business && <BusinessDashboard />}\r\n        </header>\r\n        <main className=\"container-fluid min-vh-100 bg-2 text-white p-0\">\r\n          <div className=\"p-tb-10\">\r\n          <ToastContainer />\r\n\r\n          {/** all routing in the function */}\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Category {...props} allCategories={categories} />\r\n              )}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/new-card\"\r\n              render={(props) => <NewCard {...props} categories={categories} />}\r\n            />\r\n            <ProtectedRoute path=\"/new-category\" component={NewCategory} />\r\n            <Route\r\n              path=\"/category/:id\"\r\n              exact\r\n              render={(props) => (\r\n                <CategoryId\r\n                  {...props}\r\n                  id={user?._id}\r\n                  allCards={cards}\r\n                  allCategories={categories}\r\n                  manager={user?.manager}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/category/:id/edit\"\r\n              render={(props) => (\r\n                <EditCategory {...props} manager={user?.manager} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/card/:id\"\r\n              exact\r\n              render={(props) => (\r\n                <CardId {...props} id={user?._id} cards={cards} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/card/:id/edit\"\r\n              exact\r\n              render={(props) => (\r\n                <EditCard {...props} categories={categories} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/card/:id/edit-img\"\r\n              exact\r\n              render={(props) => <EditCardImg {...props} />}\r\n            />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route\r\n              path=\"/myFavorite\"\r\n              render={(props) => <MyFavorite {...props} id={user?._id} />}\r\n            />\r\n            <Route path=\"/logout\" component={LogOut} />\r\n            <Route path=\"/sign-up-user\" component={SignUp} />\r\n            <Route path=\"/sign-up-business\" component={SignUpBusiness} />\r\n            <Route path=\"/sign-up-manager\" component={SignUpManager} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n          </div>\r\n        </main>\r\n        {/** the footer of the app */}\r\n        <footer className=\"container-fluid bg-dark p-tb-5\"></footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"jquery/dist/jquery\";\r\nimport \"popper.js/dist/popper\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}